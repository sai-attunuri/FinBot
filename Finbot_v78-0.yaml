digitalBot:
  name: Finbot
  description: Your personalized digital financial assistant for seamless banking and insurance transactions.
  division: Home
  startUpRef: "/digitalBot/bots/bot[Starting Task_10]"
  defaultLanguage: en-us
  supportedLanguages:
    en-us:
      defaultLanguageSkill:
        noValue: true
  variables:
    - stringVariable:
        name: Flow.AccountNumber_API13_INP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.AccountNumber_API14OP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - decimalVariable:
        name: Flow.Balance
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.Balance_API14OP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - decimalVariable:
        name: Flow.Balance_API9
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.BankAccName
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.BankAccNum_CASEAPI1INP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.BankAccNumber
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.BankAccountBackEndID_API14OP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.BankAccountName_API14OP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.BankAccountNumber_API14INP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.BankAccountNumber_API9
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.BankAccountPIN_API9
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.BankAccType
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.CallbackSchueduledTime_SCBAPI1INP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.CaseComment_CASEAPI3INP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.CaseCurrentStatus_CASEAPI2OP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.CaseLatestComment_CASEAPI2OP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.CaseNumber_CASEAPI1OP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.CaseNumber_CASEAPI2INP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.CaseNumber_CASEAPI3INP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.CaseSubject_CASEAPI2OP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.CaseType_CASEAPI1INP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.Contact_API14OP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.ContactID_BNKAPI5OP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.ConversationID_SCBAPI1OP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.CoverageAmount_INSAPI1OP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.CoverageAmount_INSAPI3OP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.CustomerAccountPIN
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.CustomerBackEndID
        initialValue:
          noValue: true
        isInput: false
        isOutput: true
    - stringVariable:
        name: Flow.CustomerBankAccountBackendID
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.Description_CASEAPI1INP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.DestinationBankAccountNumber_API10
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.Email
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.Email_ACCAPI1INP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.Email_ACCAPI2OP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.EndDate_INSAPI1OP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.EndDate_INSAPI3OP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringCollectionVariable:
        name: Flow.Error_ACCAPI2OP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.FirstName
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.FirstName_ACCAPI1INP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.FirstName_ACCAPI2INP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.FirstName_ACCAPI2OP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.InitialBankBalance
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.InsPolicyNum_CASEAPI1INP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.LastName
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.LastName_ACCAPI1INP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.LastName_ACCAPI2OP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.MasterPIN
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.Message_ACCAPI1OP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.Message_ACCAPI2OP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.Message_ACCAPI5OP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.Message_API10_OP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.Message_API14OP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.Message_CASEAPI1OP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.Message_CASEAPI2OP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.Message_CASEAPI3OP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.Message_INSAPI1OP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.Message_INSAPI2OP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.Message_INSAPI3OP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.MsgCode_INSAPI2OP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.Name_INSAPI1OP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.NewMasterPIN_ACCAPI1INP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.NewStatus_INSAPI2INP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.NewStatus_INSAPI2OP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.Origin_CASEAPI1INP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.PhoneNumber
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.PIN_ACCAPI1INP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.PIN_API11
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.PIN_API14INP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.PolicyContactID_INSAPI3OP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - decimalVariable:
        name: Flow.PolicyCoverageAmount_INSAPI1INP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.PolicyEndDate_INSAPI1INP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.PolicyID_INSAPI1OP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.PolicyID_INSAPI3OP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.PolicyNumber_INSAPI1OP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.PolicyNumber_INSAPI2INP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.PolicyNumber_INSAPI3INP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.PolicyNumber_INSAPI3OP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.PolicyStartDate_INSAPI1INP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.PolicyTitle_INSAPI1INP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.PolicyTitle_INSAPI3OP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.PolicyType_INSAPI1INP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.PolicyType_INSAPI1OP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.PolicyType_INSAPI3OP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.PremiumAmount_INSAPI3OP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.PremiumAmountPerMonth_INSAPI1OP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.Priority_CASEAPI1INP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.ReasonForTheTransaction_API10
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - durationVariable:
        name: Flow.RemainingPolicyTerm
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.SourceBankAccountNumber_API10
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.StartDate_INSAPI1OP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.StartDate_INSAPI3OP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.Status_INSAPI1OP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.Status_INSAPI3OP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.Subject_CASEAPI1INP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.TopUpVoucherCode
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - durationVariable:
        name: Flow.TotalTermPolicy
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - decimalVariable:
        name: Flow.TransactionAmount_API10
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.TransactionID_API10_OP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.TransactionType_API10
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.TypeOfBankAccount_API14OP
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Flow.URLFormattedPhoneNumber
        initialValue:
          noValue: true
        isInput: false
        isOutput: true
    - stringVariable:
        name: Flow.VoucherCodeFailReason
        initialValue:
          noValue: true
        isInput: false
        isOutput: false
    - stringVariable:
        name: Slot.A
        initialValue:
          noValue: true
        isInput: true
        isOutput: true
    - stringVariable:
        name: Slot.AccountPIN_API9
        initialValue:
          noValue: true
        isInput: true
        isOutput: true
    - stringVariable:
        name: Slot.B
        initialValue:
          noValue: true
        isInput: true
        isOutput: true
    - stringVariable:
        name: Slot.BankAccountName
        initialValue:
          noValue: true
        isInput: true
        isOutput: true
    - stringVariable:
        name: Slot.BankAccountNumber_API9
        initialValue:
          noValue: true
        isInput: true
        isOutput: true
    - stringVariable:
        name: Slot.BankAccType
        initialValue:
          noValue: true
        isInput: true
        isOutput: true
    - stringVariable:
        name: Slot.CaseNumber
        initialValue:
          noValue: true
        isInput: true
        isOutput: true
    - dateVariable:
        name: Slot.Date
        initialValue:
          noValue: true
        isInput: true
        isOutput: true
    - stringVariable:
        name: Slot.DestinationBankAccountNumber
        initialValue:
          noValue: true
        isInput: true
        isOutput: true
    - stringVariable:
        name: Slot.FirstName
        initialValue:
          noValue: true
        isInput: true
        isOutput: true
    - stringVariable:
        name: Slot.FourDigitsPIN
        initialValue:
          noValue: true
        isInput: true
        isOutput: true
    - stringVariable:
        name: Slot.Gmail
        initialValue:
          noValue: true
        isInput: true
        isOutput: true
    - stringVariable:
        name: Slot.InsurnacePolicyType
        initialValue:
          noValue: true
        isInput: true
        isOutput: true
    - stringVariable:
        name: Slot.LastName
        initialValue:
          noValue: true
        isInput: true
        isOutput: true
    - stringVariable:
        name: Slot.Name
        initialValue:
          noValue: true
        isInput: true
        isOutput: true
    - stringVariable:
        name: Slot.Paragraph
        initialValue:
          noValue: true
        isInput: true
        isOutput: true
    - stringVariable:
        name: Slot.PhoneNumber
        initialValue:
          noValue: true
        isInput: true
        isOutput: true
    - stringVariable:
        name: Slot.PolicyNumber
        initialValue:
          noValue: true
        isInput: true
        isOutput: true
    - stringVariable:
        name: Slot.Priority
        initialValue:
          noValue: true
        isInput: true
        isOutput: true
    - stringVariable:
        name: Slot.RegistrationVerifyOTP
        initialValue:
          noValue: true
        isInput: true
        isOutput: true
    - stringVariable:
        name: Slot.SixDigitsOTP
        initialValue:
          noValue: true
        isInput: true
        isOutput: true
    - stringVariable:
        name: Slot.SourceBankAccountNumber
        initialValue:
          noValue: true
        isInput: true
        isOutput: true
    - stringVariable:
        name: Slot.TimeFormatHHMM
        initialValue:
          noValue: true
        isInput: true
        isOutput: true
    - stringVariable:
        name: Slot.TransactionAmount
        initialValue:
          noValue: true
        isInput: true
        isOutput: true
    - stringVariable:
        name: Slot.TransactionReason
        initialValue:
          noValue: true
        isInput: true
        isOutput: true
    - stringVariable:
        name: Slot.VoucherCode
        initialValue:
          noValue: true
        isInput: true
        isOutput: true
  settingsErrorHandling:
    errorHandling:
      exit:
        none: true
    enableAgentEscalation:
      lit: true
    errorEventHandover:
      exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Sorry, an error occurred. One moment, please, while I put you through to someone who can help.\")))"
    agentEscalationConfirmation:
      exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"You want to speak to an advisor. Is that correct?\")))"
    agentEscalationHandover:
      exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"One moment, please, and I will put you through to someone.\")))"
    recognitionFailureEventHandover:
      exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Sorry, I'm having trouble understanding you. One moment, please, while I put you through to someone who can help.\")))"
    recognitionFailureEventHandling:
      exit:
        none: true
    agentEscalationHandling:
      exit:
        none: true
  tasks:
    - task:
        name: ACC-Account Services
        refId: ACC-Account Services_791
        actions:
          - digitalMenu:
              name: Digital Menu
              question:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"What would you like to do?\")))"
              noMatch:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Tell me again what you would like to do.\")))"
              selection:
                noValue: true
              knowledgeSearchResult:
                noValue: true
              chooser:
                lit:
                  presentation:
                    lit: quickReplies
                  carousel:
                    lit:
                      cards:
                        lit: []
                  quickReplies:
                    lit:
                      buttons:
                        lit:
                          - lit:
                              label:
                                noValue: true
                              value:
                                lit: View My Account Details👀
                              type:
                                lit: postback
                          - lit:
                              label:
                                noValue: true
                              value:
                                lit: Update My Profile Details🛠️
                              type:
                                lit: postback
                          - lit:
                              label:
                                noValue: true
                              value:
                                lit: Home 🏠
                              type:
                                lit: postback
              outputs:
                maxNoInputs:
                  enabled: false
                paths:
                  - path:
                      name: View My Account Details👀
                      actions:
                        - jumpToTask:
                            name: Jump to Reusable Task
                            targetTaskRef: "/digitalBot/tasks/task[ACC-View My Account Details_802]"
                  - path:
                      name: Update My Profile Details🛠️
                      actions:
                        - jumpToTask:
                            name: Jump to Reusable Task
                            targetTaskRef: "/digitalBot/tasks/task[ACC-Update My Profile Details_399]"
                  - path:
                      name: Home 🏠
                      actions:
                        - jumpToTask:
                            name: Jump to Reusable Task
                            targetTaskRef: "/digitalBot/tasks/task[General-Return To The Main Menu_946]"
    - task:
        name: ACC-Register Customer
        refId: ACC-Register Customer_845
        variables:
          - integerVariable:
              name: Task.LoopIndex1
              initialValue:
                noValue: true
              isInput: false
              isOutput: false
          - stringVariable:
              name: Task.TempPIN1
              initialValue:
                noValue: true
              isInput: false
              isOutput: false
          - stringVariable:
              name: Task.TempPIN2
              initialValue:
                noValue: true
              isInput: false
              isOutput: false
        actions:
          - communicate:
              name: Communicate
              communication:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Let me collect few basic details to complete registration process.🧑🏻‍💻\")))"
          - askForSlot:
              name: Ask for Slot
              slot:
                name: Name
              question:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"May I please have your first name?😊\")))"
              customValidation:
                noValue: true
              confirmationMode:
                lit: never
              noMatch:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please provide valid first name?\")))"
              outputs:
                maxNoInputs:
                  enabled: false
          - updateData:
              name: Update Data
              statements:
                - string:
                    variable: Flow.FirstName_ACCAPI2INP
                    value:
                      exp: Slot.Name
          - clearSlot:
              name: Clear Slot
              slots:
                - slot:
                    name: Name
          - askForSlot:
              name: Ask for Slot
              slot:
                name: Name
              question:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"What is your last name?🖊\")))"
              customValidation:
                noValue: true
              confirmationMode:
                lit: never
              noMatch:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please provide valid last name?\")))"
              outputs:
                maxNoInputs:
                  enabled: false
          - askForSlot:
              name: Ask for Slot
              slot:
                name: Gmail
              question:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"May I please have your email address?✉︎\")))"
              customValidation:
                noValue: true
              confirmationMode:
                lit: never
              noMatch:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please provide valid email address?📩\")))"
              outputs:
                maxNoInputs:
                  enabled: false
          - loop:
              name: Loop
              currentIndex:
                var: Task.LoopIndex1
              loopCount:
                lit: 2
              outputs:
                loop:
                  actions:
                    - askForSlot:
                        name: Ask for Slot
                        slot:
                          name: FourDigitsPIN
                        question:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please set 4 digits Master PIN for your Account.🔑\")))"
                        customValidation:
                          noValue: true
                        confirmationMode:
                          lit: never
                        noMatch:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please set valid 4 digits Master PIN for your account. ⚠\\n_Only numbers are allowed._\")))"
                        outputs:
                          maxNoInputs:
                            enabled: false
                    - updateData:
                        name: Update Data
                        statements:
                          - string:
                              variable: Task.TempPIN1
                              value:
                                exp: Slot.FourDigitsPIN
                    - clearSlot:
                        name: Clear Slot
                        slots:
                          - slot:
                              name: FourDigitsPIN
                    - askForSlot:
                        name: Ask for Slot
                        slot:
                          name: FourDigitsPIN
                        question:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please Re-enter same 4 digits Master PIN once again.✔\")))"
                        customValidation:
                          noValue: true
                        confirmationMode:
                          lit: never
                        noMatch:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Invalid Input.Please Re-enter same 4 digits Master PIN once again.✔\")))"
                        outputs:
                          maxNoInputs:
                            enabled: false
                    - updateData:
                        name: Update Data
                        statements:
                          - string:
                              variable: Task.TempPIN2
                              value:
                                exp: Slot.FourDigitsPIN
                    - clearSlot:
                        name: Clear Slot
                        slots:
                          - slot:
                              name: FourDigitsPIN
                    - decision:
                        name: Decision
                        condition:
                          exp: If(Task.TempPIN1==Task.TempPIN2,true,false)
                        outputs:
                          "yes":
                            actions:
                              - updateData:
                                  name: Update Data
                                  statements:
                                    - string:
                                        variable: Flow.MasterPIN
                                        value:
                                          exp: Task.TempPIN1
                              - loopExit:
                                  name: Exit Loop
                          "no":
                            actions:
                              - decision:
                                  name: Decision
                                  condition:
                                    exp: Task.LoopIndex1<1
                                  outputs:
                                    "yes":
                                      actions:
                                        - communicate:
                                            name: Communicate
                                            communication:
                                              exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Oops! It looks like the PIN's you entered don't match. One more chance.💁🏽\")))"
                                        - loopNext:
                                            name: Next Loop
                                    "no":
                                      actions:
                                        - communicate:
                                            name: Communicate
                                            communication:
                                              exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Oops! It looks like the PIN's you entered doesn't match once again. Please try again later.🚫\")))"
                                        - communicate:
                                            name: Communicate
                                            communication:
                                              exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're disconnecting the current interaction now. Have a great day!👋\")))"
                                        - disconnect:
                                            name: Disconnect
          - updateData:
              name: Update Data
              statements:
                - string:
                    variable: Flow.LastName
                    value:
                      exp: Slot.Name
                - string:
                    variable: Flow.Email
                    value:
                      exp: Slot.Gmail
          - clearSlot:
              name: Clear Slot
              slots:
                - slot:
                    name: Name
                - slot:
                    name: Gmail
          - callTask:
              name: Call Task
              targetTaskRef: "/digitalBot/tasks/task[ACCAPI3-Send OTP_878]"
              outputs:
                default:
                  actions:
                    - communicate:
                        name: Communicate
                        communication:
                          exp: "MakeCommunication(\n  ToCommunication(MakeCommunication(\"A 6-digit OTP has been sent to \", Flow.PhoneNumber, \".#️⃣\")))"
                    - callTask:
                        name: Call Task
                        targetTaskRef: "/digitalBot/tasks/task[ACCAPI4-Verify OTP_212]"
                        outputs:
                          default:
                            actions:
                              - communicate:
                                  name: Communicate
                                  communication:
                                    exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Thank you! Your OTP has been verified sucessfully.✅\")))"
                              - callTask:
                                  name: Call Task
                                  targetTaskRef: "/digitalBot/tasks/task[ACCAPI2-Register Customer_914]"
                                  outputs:
                                    default:
                                      actions:
                                        - communicate:
                                            name: Communicate
                                            communication:
                                              exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Congratulations! Your registration is complete. Welcome aboard!🎉 \")))"
                                        - communicate:
                                            name: Communicate
                                            communication:
                                              exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Taking you to the main menu for the first time.🏠. How Can I assist you today?\")))"
                                        - jumpToTask:
                                            name: Jump to Reusable Task
                                            targetTaskRef: "/digitalBot/tasks/task[Main Menu_63]"
                                    paths:
                                      - path:
                                          name: Unable to Register Customer
                                          actions:
                                            - communicate:
                                                name: Communicate
                                                communication:
                                                  exp: "MakeCommunication(\n  ToCommunication(MakeCommunication(\"Oops! Something went wrong with your registration.😞\\nReason could be: \", ToCommunication(Flow.Error_ACCAPI2OP))))"
                          paths:
                            - path:
                                name: Unable to VerifyOTP
                                actions:
                                  - communicate:
                                      name: Communicate
                                      communication:
                                        exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Unable to verify OTP at this moment. Please try again later for Registration.❌\")))"
                paths:
                  - path:
                      name: Unable To Send OTP
                      actions:
                        - communicate:
                            name: Communicate
                            communication:
                              exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Unable to send OTP at this moment. Please try again later for Registration.☹\")))"
          - communicate:
              name: Communicate
              communication:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're disconnecting the current interaction now. Have a great day!👋\")))"
          - disconnect:
              name: Disconnect
    - task:
        name: ACC-Update My Profile Details
        refId: ACC-Update My Profile Details_399
        variables:
          - integerVariable:
              name: Task.LoopIndex1
              initialValue:
                noValue: true
              isInput: false
              isOutput: false
        actions:
          - loop:
              name: Loop
              currentIndex:
                var: Task.LoopIndex1
              loopCount:
                lit: 99
              outputs:
                loop:
                  actions:
                    - digitalMenu:
                        name: Digital Menu
                        question:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Which personal information you would like to update?\")))"
                        noMatch:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Tell me again what you would like to do.\")))"
                        selection:
                          noValue: true
                        knowledgeSearchResult:
                          noValue: true
                        chooser:
                          lit:
                            presentation:
                              lit: quickReplies
                            carousel:
                              lit:
                                cards:
                                  lit: []
                            quickReplies:
                              lit:
                                buttons:
                                  lit:
                                    - lit:
                                        label:
                                          noValue: true
                                        value:
                                          lit: First Name
                                        type:
                                          lit: postback
                                    - lit:
                                        label:
                                          noValue: true
                                        value:
                                          lit: Last Name
                                        type:
                                          lit: postback
                                    - lit:
                                        label:
                                          noValue: true
                                        value:
                                          lit: Email Address
                                        type:
                                          lit: postback
                                    - lit:
                                        label:
                                          noValue: true
                                        value:
                                          lit: Master PIN
                                        type:
                                          lit: postback
                                    - lit:
                                        label:
                                          noValue: true
                                        value:
                                          lit: Cancel
                                        type:
                                          lit: postback
                        outputs:
                          maxNoInputs:
                            enabled: false
                          paths:
                            - path:
                                name: First Name
                                actions:
                                  - askForSlot:
                                      name: Ask for Slot
                                      slot:
                                        name: FirstName
                                      question:
                                        exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"You choose to update your FirstName.\\nPlease enter your First Name.\")))"
                                      customValidation:
                                        noValue: true
                                      confirmationMode:
                                        lit: never
                                      noMatch:
                                        exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please enter valid First Name.\")))"
                                      outputs:
                                        maxNoInputs:
                                          enabled: false
                                  - askForSlot:
                                      name: Ask for Slot
                                      slot:
                                        name: A
                                      question:
                                        exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"🔒To verify your identity, enter your 4-digit Master PIN.\")))"
                                      customValidation:
                                        noValue: true
                                      confirmationMode:
                                        lit: never
                                      noMatch:
                                        exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"⚠️ Invalid input. Please enter a valid 4-digit PIN to proceed.\")))"
                                      outputs:
                                        maxNoInputs:
                                          enabled: false
                                  - updateData:
                                      name: Update Data
                                      statements:
                                        - string:
                                            variable: Flow.FirstName_ACCAPI1INP
                                            value:
                                              exp: Slot.FirstName
                                        - string:
                                            variable: Flow.LastName_ACCAPI1INP
                                            value:
                                              exp: "\" \""
                                        - string:
                                            variable: Flow.Email_ACCAPI1INP
                                            value:
                                              exp: "\" \""
                                        - string:
                                            variable: Flow.NewMasterPIN_ACCAPI1INP
                                            value:
                                              exp: "\" \""
                                        - string:
                                            variable: Flow.PIN_ACCAPI1INP
                                            value:
                                              exp: Slot.A
                                  - clearSlot:
                                      name: Clear Slot
                                      slots:
                                        - slot:
                                            name: FirstName
                                        - slot:
                                            name: A
                            - path:
                                name: Last Name
                                actions:
                                  - askForSlot:
                                      name: Ask for Slot
                                      slot:
                                        name: LastName
                                      question:
                                        exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"You choose to update your Last Name.\\nPlease enter your Last Name.\")))"
                                      customValidation:
                                        noValue: true
                                      confirmationMode:
                                        lit: never
                                      noMatch:
                                        exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please enter valid Last Name.\")))"
                                      outputs:
                                        maxNoInputs:
                                          enabled: false
                                  - askForSlot:
                                      name: Ask for Slot
                                      slot:
                                        name: A
                                      question:
                                        exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"🔒To verify your identity, enter your 4-digit Master PIN.\")))"
                                      customValidation:
                                        noValue: true
                                      confirmationMode:
                                        lit: never
                                      noMatch:
                                        exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"⚠️ Invalid input. Please enter a valid 4-digit PIN to proceed.\")))"
                                      outputs:
                                        maxNoInputs:
                                          enabled: false
                                  - updateData:
                                      name: Update Data
                                      statements:
                                        - string:
                                            variable: Flow.FirstName_ACCAPI1INP
                                            value:
                                              exp: "\" \""
                                        - string:
                                            variable: Flow.LastName_ACCAPI1INP
                                            value:
                                              exp: Slot.LastName
                                        - string:
                                            variable: Flow.Email_ACCAPI1INP
                                            value:
                                              exp: "\" \""
                                        - string:
                                            variable: Flow.NewMasterPIN_ACCAPI1INP
                                            value:
                                              exp: "\" \""
                                        - string:
                                            variable: Flow.PIN_ACCAPI1INP
                                            value:
                                              exp: Slot.A
                                  - clearSlot:
                                      name: Clear Slot
                                      slots:
                                        - slot:
                                            name: LastName
                                        - slot:
                                            name: A
                            - path:
                                name: Email Address
                                actions:
                                  - askForSlot:
                                      name: Ask for Slot
                                      slot:
                                        name: Gmail
                                      question:
                                        exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"You choose to update your Email Address.\\nPlease enter your new Email Address\")))"
                                      customValidation:
                                        noValue: true
                                      confirmationMode:
                                        lit: never
                                      noMatch:
                                        exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please enter valid Email Address that ends with @gmail.com\")))"
                                      outputs:
                                        maxNoInputs:
                                          enabled: false
                                  - askForSlot:
                                      name: Ask for Slot
                                      slot:
                                        name: A
                                      question:
                                        exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"🔒To verify your identity, enter your 4-digit Master PIN.\")))"
                                      customValidation:
                                        noValue: true
                                      confirmationMode:
                                        lit: never
                                      noMatch:
                                        exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"⚠️ Invalid input. Please enter a valid 4-digit PIN to proceed.\")))"
                                      outputs:
                                        maxNoInputs:
                                          enabled: false
                                  - updateData:
                                      name: Update Data
                                      statements:
                                        - string:
                                            variable: Flow.FirstName_ACCAPI1INP
                                            value:
                                              exp: "\" \""
                                        - string:
                                            variable: Flow.LastName_ACCAPI1INP
                                            value:
                                              exp: "\" \""
                                        - string:
                                            variable: Flow.Email_ACCAPI1INP
                                            value:
                                              exp: Slot.Gmail
                                        - string:
                                            variable: Flow.NewMasterPIN_ACCAPI1INP
                                            value:
                                              exp: "\" \""
                                        - string:
                                            variable: Flow.PIN_ACCAPI1INP
                                            value:
                                              exp: Slot.A
                                  - clearSlot:
                                      name: Clear Slot
                                      slots:
                                        - slot:
                                            name: Gmail
                                        - slot:
                                            name: A
                            - path:
                                name: Master PIN
                                actions:
                                  - askForSlot:
                                      name: Ask for Slot
                                      slot:
                                        name: B
                                      question:
                                        exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"You choose to update your Master PIN\\nPlease enter your New Master PIN which should be only 4 digits \")))"
                                      customValidation:
                                        noValue: true
                                      confirmationMode:
                                        lit: never
                                      noMatch:
                                        exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please enter valid First Name.\")))"
                                      outputs:
                                        maxNoInputs:
                                          enabled: false
                                  - askForSlot:
                                      name: Ask for Slot
                                      slot:
                                        name: A
                                      question:
                                        exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"🔒To verify your identity, enter your current 4-digit Master PIN.\")))"
                                      customValidation:
                                        noValue: true
                                      confirmationMode:
                                        lit: never
                                      noMatch:
                                        exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"⚠️ Invalid input. Please enter a valid 4-digit PIN to proceed.\")))"
                                      outputs:
                                        maxNoInputs:
                                          enabled: false
                                  - updateData:
                                      name: Update Data
                                      statements:
                                        - string:
                                            variable: Flow.FirstName_ACCAPI1INP
                                            value:
                                              exp: "\" \""
                                        - string:
                                            variable: Flow.LastName_ACCAPI1INP
                                            value:
                                              exp: "\" \""
                                        - string:
                                            variable: Flow.Email_ACCAPI1INP
                                            value:
                                              exp: "\" \""
                                        - string:
                                            variable: Flow.NewMasterPIN_ACCAPI1INP
                                            value:
                                              exp: Slot.B
                                        - string:
                                            variable: Flow.PIN_ACCAPI1INP
                                            value:
                                              exp: Slot.A
                                  - clearSlot:
                                      name: Clear Slot
                                      slots:
                                        - slot:
                                            name: B
                                        - slot:
                                            name: A
                            - path:
                                name: Cancel
                                actions:
                                  - jumpToTask:
                                      name: Jump to Reusable Task
                                      targetTaskRef: "/digitalBot/tasks/task[General-Return To The Main Menu_946]"
                    - communicate:
                        name: Communicate
                        communication:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Updating your information...✨\")))"
                    - callTask:
                        name: Call Task
                        targetTaskRef: "/digitalBot/tasks/task[ACCAPI7-Update Profile Details_753]"
                        outputs:
                          default:
                            actions:
                              - communicate:
                                  name: Communicate
                                  communication:
                                    exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Your information has been successfully updated. \")))"
                          paths:
                            - path:
                                name: Unable to Update
                                actions:
                                  - communicate:
                                      name: Communicate
                                      communication:
                                        exp: "MakeCommunication(\n  ToCommunication(ToCommunication(Flow.Message_ACCAPI1OP)))"
                    - askForBoolean:
                        name: Ask for Yes / No
                        question:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Would you like to update anything else?𓂃🖌\")))"
                        noMatch:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please input \\\"Yes\\\" or \\\"No\\\". Do you want to proceed?\")))"
                        outputs:
                          "yes":
                            actions:
                              - loopNext:
                                  name: Next Loop
                          "no":
                            actions:
                              - loopExit:
                                  name: Exit Loop
                          maxNoInputs:
                            enabled: false
          - communicate:
              name: Communicate
              communication:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"🔄 Returing you to the Main Menu\")))"
          - jumpToTask:
              name: Jump to Reusable Task
              targetTaskRef: "/digitalBot/tasks/task[Main Menu_63]"
    - task:
        name: ACC-View My Account Details
        refId: ACC-View My Account Details_802
        actions:
          - callTask:
              name: Call Task
              targetTaskRef: "/digitalBot/tasks/task[ACCAPI6-Get Account Details_790]"
              outputs:
                default:
                  actions:
                    - communicate:
                        name: Communicate
                        communication:
                          exp: "MakeCommunication(\n  ToCommunication(MakeCommunication(\"👤 *Profile Information:*\\n🗣️ *First Name:* \", Flow.FirstName_ACCAPI2OP, \"\\n👥 *Last Name:* \", Flow.LastName_ACCAPI2OP, \"\\n📧 *Email:* \", Flow.Email_ACCAPI2OP, \"\\n📞 *Phone Number:* \", Flow.PhoneNumber)))"
                paths:
                  - path:
                      name: Unable to Get Account Details
                      actions:
                        - communicate:
                            name: Communicate
                            communication:
                              exp: "MakeCommunication(\n  ToCommunication(MakeCommunication(\"😞 Unfortunately, I'm unable to access your details at this time. \\n\", Flow.Message_ACCAPI2OP)))"
          - jumpToTask:
              name: Jump to Reusable Task
              targetTaskRef: "/digitalBot/tasks/task[General-Return To The Main Menu_946]"
    - task:
        name: ACCAPI1-Check Existing Customer Or Not
        refId: ACCAPI1-Check Existing Customer Or Not_164
        variables:
          - integerVariable:
              name: Task.NumberOfCustomersFound
              initialValue:
                noValue: true
              isInput: false
              isOutput: false
        actions:
          - updateData:
              name: Update Data
              statements:
                - string:
                    variable: Flow.URLFormattedPhoneNumber
                    value:
                      exp: ToString("%2B"+Right(Flow.PhoneNumber,12))
          - communicate:
              name: Communicate
              communication:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Checking if you're an existing customer. Please wait a moment...🔍 \")))"
          - callData:
              name: Call Data Action
              timeout:
                lit:
                  minutes: 1
              category:
                Salesforce Data Actions-SKRA:
                  dataAction:
                    IAS-Registration-Get Customer Details Based On Phone Number:
                      inputs:
                        PhoneNumber:
                          exp: Flow.URLFormattedPhoneNumber
                      successOutputs:
                        totalSize:
                          var: Task.NumberOfCustomersFound
                        Id:
                          var: Flow.CustomerBackEndID
                        FirstName:
                          var: Flow.FirstName
                        LastName:
                          var: Flow.LastName
                        Email:
                          var: Flow.Email
                        Phone:
                          noValue: true
                        CreatedDate:
                          noValue: true
                      failureOutputs:
                        errorCode:
                          noValue: true
                        status:
                          noValue: true
                        correlationId:
                          noValue: true
                        entityId:
                          noValue: true
                        entityName:
                          noValue: true
                        userMessage:
                          noValue: true
                        userParamsMessage:
                          noValue: true
                        userParams.key:
                          noValue: true
                        userParams.value:
                          noValue: true
                        details.errorCode:
                          noValue: true
                        details.fieldName:
                          noValue: true
                        details.entityId:
                          noValue: true
                        details.entityName:
                          noValue: true
              outputs:
                success:
                  actions:
                    - decision:
                        name: Decision
                        condition:
                          exp: ToBool(Task.NumberOfCustomersFound)
                        outputs:
                          "yes":
                            actions:
                              - endTask:
                                  name: End Task
                                  outputPath:
                                    name: default
                          "no":
                            actions:
                              - endTask:
                                  name: End Task
                                  outputPath:
                                    name: Not an Existing Customer
                failure:
                  actions:
                    - communicate:
                        name: Communicate
                        communication:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're currently facing some technical failure🔧 issues in ACCAPI1.\")))"
                timeout:
                  actions:
                    - communicate:
                        name: Communicate
                        communication:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're currently facing some technical timeout ⏲ issues in ACCAPI1.\")))"
          - communicate:
              name: Communicate
              communication:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're disconnecting the current interaction now. Have a great day!👋\")))"
          - disconnect:
              name: Disconnect
        outputPaths:
          - outputPath:
              name: Not an Existing Customer
    - task:
        name: ACCAPI2-Register Customer
        refId: ACCAPI2-Register Customer_914
        variables:
          - booleanVariable:
              name: Task.IsContactCreated
              initialValue:
                noValue: true
              isInput: false
              isOutput: false
        actions:
          - communicate:
              name: Communicate
              communication:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\" We're processing your registration. This will just take a moment....⏳\")))"
          - callData:
              name: Call Data Action
              timeout:
                lit:
                  minutes: 1
              category:
                Salesforce Data Actions-SKRA:
                  dataAction:
                    IAS-Registration-Create Customer In Contact Object_V2:
                      inputs:
                        FirstName:
                          exp: Flow.FirstName
                        LastName:
                          exp: Flow.LastName
                        Phone:
                          exp: Flow.PhoneNumber
                        Email:
                          exp: Flow.Email
                        MasterPIN:
                          exp: ToDecimal(Flow.MasterPIN)
                      successOutputs:
                        id:
                          var: Flow.CustomerBackEndID
                        success:
                          var: Task.IsContactCreated
                        errors:
                          var: Flow.Error_ACCAPI2OP
                      failureOutputs:
                        errorCode:
                          noValue: true
                        status:
                          noValue: true
                        correlationId:
                          noValue: true
                        entityId:
                          noValue: true
                        entityName:
                          noValue: true
                        userMessage:
                          noValue: true
                        userParamsMessage:
                          noValue: true
                        userParams.key:
                          noValue: true
                        userParams.value:
                          noValue: true
                        details.errorCode:
                          noValue: true
                        details.fieldName:
                          noValue: true
                        details.entityId:
                          noValue: true
                        details.entityName:
                          noValue: true
              outputs:
                success:
                  actions:
                    - decision:
                        name: Decision
                        condition:
                          exp: Task.IsContactCreated
                        outputs:
                          "yes":
                            actions:
                              - endTask:
                                  name: End Task
                                  outputPath:
                                    name: default
                          "no":
                            actions:
                              - endTask:
                                  name: End Task
                                  outputPath:
                                    name: Unable to Register Customer
                failure:
                  actions:
                    - communicate:
                        name: Communicate
                        communication:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're currently facing some technical failure🔧 issues in ACCAPI2.\")))"
                timeout:
                  actions:
                    - communicate:
                        name: Communicate
                        communication:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're currently facing some technical timeout ⏲ issues in ACCAPI2.\")))"
          - communicate:
              name: Communicate
              communication:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're disconnecting the current interaction now. Have a great day!👋\")))"
          - disconnect:
              name: Disconnect
        outputPaths:
          - outputPath:
              name: Unable to Register Customer
    - task:
        name: ACCAPI3-Send OTP
        refId: ACCAPI3-Send OTP_878
        variables:
          - stringVariable:
              name: Task.SMSSentStatus_ACCAPI3OP
              initialValue:
                noValue: true
              isInput: false
              isOutput: false
        actions:
          - communicate:
              name: Communicate
              communication:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"An OTP is on its way to you.📲 \")))"
          - callData:
              name: Call Data Action
              timeout:
                lit:
                  minutes: 1
              category:
                Twilio SMS Integration:
                  dataAction:
                    SendOTPViaTwilio2:
                      inputs:
                        CustomerPhoneNumber:
                          exp: Flow.PhoneNumber
                      successOutputs:
                        SMSSentStatus:
                          var: Task.SMSSentStatus_ACCAPI3OP
                        ToPhoneNumber:
                          noValue: true
                        SentTime:
                          noValue: true
                      failureOutputs:
                        errorCode:
                          noValue: true
                        status:
                          noValue: true
                        correlationId:
                          noValue: true
                        entityId:
                          noValue: true
                        entityName:
                          noValue: true
                        userMessage:
                          noValue: true
                        userParamsMessage:
                          noValue: true
                        userParams.key:
                          noValue: true
                        userParams.value:
                          noValue: true
                        details.errorCode:
                          noValue: true
                        details.fieldName:
                          noValue: true
                        details.entityId:
                          noValue: true
                        details.entityName:
                          noValue: true
              outputs:
                success:
                  actions:
                    - decision:
                        name: Decision
                        condition:
                          exp: If(Task.SMSSentStatus_ACCAPI3OP=="pending",true,false)
                        outputs:
                          "yes":
                            actions:
                              - endTask:
                                  name: End Task
                                  outputPath:
                                    name: default
                          "no":
                            actions:
                              - endTask:
                                  name: End Task
                                  outputPath:
                                    name: Unable To Send OTP
                failure:
                  actions:
                    - communicate:
                        name: Communicate
                        communication:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're currently facing some technical failure🔧 issues in ACCAPI3.\")))"
                timeout:
                  actions:
                    - communicate:
                        name: Communicate
                        communication:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're currently facing some technical timeout ⏲ issues in ACCAPI3.\")))"
          - communicate:
              name: Communicate
              communication:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're disconnecting the current interaction now. Have a great day!👋\")))"
          - disconnect:
              name: Disconnect
        outputPaths:
          - outputPath:
              name: Unable To Send OTP
    - task:
        name: ACCAPI4-Verify OTP
        refId: ACCAPI4-Verify OTP_212
        variables:
          - stringVariable:
              name: Task.OTPVerifyStatus_ACCAPI4OP
              initialValue:
                noValue: true
              isInput: false
              isOutput: false
          - stringVariable:
              name: Task.RegistrationVerifyOTP
              initialValue:
                noValue: true
              isInput: false
              isOutput: false
        actions:
          - askForSlot:
              name: Ask for Slot
              slot:
                name: SixDigitsOTP
              question:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"➠Please enter the OTP to proceed.\")))"
              customValidation:
                noValue: true
              confirmationMode:
                lit: never
              noMatch:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please enter valid OTP to continue.⟳\")))"
              outputs:
                maxNoInputs:
                  enabled: false
          - updateData:
              name: Update Data
              statements:
                - string:
                    variable: Task.RegistrationVerifyOTP
                    value:
                      exp: Slot.SixDigitsOTP
          - clearSlot:
              name: Clear Slot
              slots:
                - slot:
                    name: SixDigitsOTP
          - communicate:
              name: Communicate
              communication:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Your OTP is being verified. Hold on for a bit......⏳ \")))"
          - callData:
              name: Call Data Action
              timeout:
                lit:
                  minutes: 1
              category:
                Twilio SMS Integration:
                  dataAction:
                    VerifyOTPSentThroughTwilio2:
                      inputs:
                        OTP:
                          exp: Task.RegistrationVerifyOTP
                        CustomerPhoneNumber:
                          exp: Flow.PhoneNumber
                      successOutputs:
                        Response:
                          var: Task.OTPVerifyStatus_ACCAPI4OP
                      failureOutputs:
                        errorCode:
                          noValue: true
                        status:
                          noValue: true
                        correlationId:
                          noValue: true
                        entityId:
                          noValue: true
                        entityName:
                          noValue: true
                        userMessage:
                          noValue: true
                        userParamsMessage:
                          noValue: true
                        userParams.key:
                          noValue: true
                        userParams.value:
                          noValue: true
                        details.errorCode:
                          noValue: true
                        details.fieldName:
                          noValue: true
                        details.entityId:
                          noValue: true
                        details.entityName:
                          noValue: true
              outputs:
                success:
                  actions:
                    - decision:
                        name: Decision
                        condition:
                          exp: If(Task.OTPVerifyStatus_ACCAPI4OP=="approved",true,false)
                        outputs:
                          "yes":
                            actions:
                              - endTask:
                                  name: End Task
                                  outputPath:
                                    name: default
                          "no":
                            actions:
                              - endTask:
                                  name: End Task
                                  outputPath:
                                    name: Unable to VerifyOTP
                failure:
                  actions:
                    - communicate:
                        name: Communicate
                        communication:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're currently facing some technical failure🔧 issues in ACCAPI4.\")))"
                timeout:
                  actions:
                    - communicate:
                        name: Communicate
                        communication:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're currently facing some technical timeout ⏲ issues in ACCAPI4.\")))"
          - communicate:
              name: Communicate
              communication:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're disconnecting the current interaction now.Have a great day!👋\")))"
          - disconnect:
              name: Disconnect
        outputPaths:
          - outputPath:
              name: Unable to VerifyOTP
    - task:
        name: ACCAPI5-Validate Master PIN
        refId: ACCAPI5-Validate Master PIN_720
        variables:
          - booleanVariable:
              name: Task.IsPINValid_ACCAPI5OP
              initialValue:
                noValue: true
              isInput: false
              isOutput: false
          - stringVariable:
              name: Task.MasterPIN_ACCAPI5INP
              initialValue:
                noValue: true
              isInput: false
              isOutput: false
        actions:
          - askForSlot:
              name: Ask for Slot
              slot:
                name: FourDigitsPIN
              question:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"To verify your identity, enter your 4-digit Master PIN.🔒\")))"
              customValidation:
                noValue: true
              confirmationMode:
                lit: never
              noMatch:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\" Invalid input. Please enter a valid 4-digit PIN to proceed.⚠️\")))"
              outputs:
                maxNoInputs:
                  enabled: false
          - updateData:
              name: Update Data
              statements:
                - string:
                    variable: Task.MasterPIN_ACCAPI5INP
                    value:
                      exp: Slot.FourDigitsPIN
          - clearSlot:
              name: Clear Slot
              slots:
                - slot:
                    name: FourDigitsPIN
          - communicate:
              name: Communicate
              communication:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Verifying your Master PIN... Please wait a moment.....⏳\")))"
          - callData:
              name: Call Data Action
              timeout:
                lit:
                  minutes: 1
              category:
                Salesforce Data Actions-SKRA:
                  dataAction:
                    IAS-Insurance-Validate Master PIN:
                      inputs:
                        CustomerBackEndID:
                          exp: Flow.CustomerBackEndID
                        PIN:
                          exp: Task.MasterPIN_ACCAPI5INP
                      successOutputs:
                        IsPINValid:
                          var: Task.IsPINValid_ACCAPI5OP
                        Message:
                          var: Flow.Message_ACCAPI5OP
                      failureOutputs:
                        errorCode:
                          noValue: true
                        status:
                          noValue: true
                        correlationId:
                          noValue: true
                        entityId:
                          noValue: true
                        entityName:
                          noValue: true
                        userMessage:
                          noValue: true
                        userParamsMessage:
                          noValue: true
                        userParams.key:
                          noValue: true
                        userParams.value:
                          noValue: true
                        details.errorCode:
                          noValue: true
                        details.fieldName:
                          noValue: true
                        details.entityId:
                          noValue: true
                        details.entityName:
                          noValue: true
              outputs:
                success:
                  actions:
                    - decision:
                        name: Decision
                        condition:
                          exp: Task.IsPINValid_ACCAPI5OP
                        outputs:
                          "yes":
                            actions:
                              - communicate:
                                  name: Communicate
                                  communication:
                                    exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Master PIN verified successfully!✅ \")))"
                              - endTask:
                                  name: End Task
                                  outputPath:
                                    name: default
                          "no":
                            actions:
                              - communicate:
                                  name: Communicate
                                  communication:
                                    exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Incorrect PIN.❌ \")))"
                              - endTask:
                                  name: End Task
                                  outputPath:
                                    name: Invalid PIN
                failure:
                  actions:
                    - communicate:
                        name: Communicate
                        communication:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're currently facing some technical failure🔧 issues in ACCAPI5.\")))"
                timeout:
                  actions:
                    - communicate:
                        name: Communicate
                        communication:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're currently facing some technical timeout ⏲ issues in ACCAPI5.\")))"
          - communicate:
              name: Communicate
              communication:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're disconnecting the current interaction now.Have a great day!👋 \")))"
          - disconnect:
              name: Disconnect
        outputPaths:
          - outputPath:
              name: Invalid PIN
    - task:
        name: ACCAPI6-Get Account Details
        refId: ACCAPI6-Get Account Details_790
        variables:
          - booleanVariable:
              name: Task.IsRowFound
              initialValue:
                noValue: true
              isInput: false
              isOutput: false
        actions:
          - communicate:
              name: Communicate
              communication:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Fetching your information, please hold on...⏳ \")))"
          - callData:
              name: Call Data Action
              timeout:
                lit:
                  minutes: 1
              category:
                Salesforce Data Actions-SKRA:
                  dataAction:
                    IAS-Account-Get Contact Details:
                      inputs:
                        CustomerBackEndID:
                          exp: Flow.CustomerBackEndID
                      successOutputs:
                        IsRowFound:
                          var: Task.IsRowFound
                        ContactId:
                          noValue: true
                        FirstName:
                          var: Flow.FirstName_ACCAPI2OP
                        LastName:
                          var: Flow.LastName_ACCAPI2OP
                        Email:
                          var: Flow.Email_ACCAPI2OP
                        MasterPIN:
                          noValue: true
                        Message:
                          var: Flow.Message_ACCAPI2OP
                      failureOutputs:
                        errorCode:
                          noValue: true
                        status:
                          noValue: true
                        correlationId:
                          noValue: true
                        entityId:
                          noValue: true
                        entityName:
                          noValue: true
                        userMessage:
                          noValue: true
                        userParamsMessage:
                          noValue: true
                        userParams.key:
                          noValue: true
                        userParams.value:
                          noValue: true
                        details.errorCode:
                          noValue: true
                        details.fieldName:
                          noValue: true
                        details.entityId:
                          noValue: true
                        details.entityName:
                          noValue: true
              outputs:
                success:
                  actions:
                    - decision:
                        name: Decision
                        condition:
                          exp: Task.IsRowFound
                        outputs:
                          "yes":
                            actions:
                              - endTask:
                                  name: End Task
                                  outputPath:
                                    name: default
                          "no":
                            actions:
                              - endTask:
                                  name: End Task
                                  outputPath:
                                    name: Unable to Get Account Details
                failure:
                  actions:
                    - communicate:
                        name: Communicate
                        communication:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're currently facing some technical failure🔧 issues in ACCAPI6.\\n\")))"
                timeout:
                  actions:
                    - communicate:
                        name: Communicate
                        communication:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're currently facing some technical timeout ⏲ issues in ACCAPI6.\")))"
          - communicate:
              name: Communicate
              communication:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're disconnecting the current interaction now.Have a great day!👋 \")))"
          - disconnect:
              name: Disconnect
        outputPaths:
          - outputPath:
              name: Unable to Get Account Details
    - task:
        name: ACCAPI7-Update Profile Details
        refId: ACCAPI7-Update Profile Details_753
        variables:
          - booleanVariable:
              name: Task.IsFieldUpdated_ACCAPI1OP
              initialValue:
                noValue: true
              isInput: false
              isOutput: false
        actions:
          - callData:
              name: Call Data Action
              timeout:
                lit:
                  minutes: 1
              category:
                Salesforce Data Actions-SKRA:
                  dataAction:
                    IAS-Account-UpdateProfileDetails:
                      inputs:
                        CustomerBackEndID:
                          exp: Flow.CustomerBackEndID
                        PIN:
                          exp: Flow.PIN_ACCAPI1INP
                        FirstName:
                          exp: Flow.FirstName_ACCAPI1INP
                        LastName:
                          exp: Flow.LastName_ACCAPI1INP
                        Email:
                          exp: Flow.Email_ACCAPI1INP
                        NewMasterPIN:
                          exp: Flow.NewMasterPIN_ACCAPI1INP
                      successOutputs:
                        IsFieldUpdated:
                          var: Task.IsFieldUpdated_ACCAPI1OP
                        Message:
                          var: Flow.Message_ACCAPI1OP
                      failureOutputs:
                        errorCode:
                          noValue: true
                        status:
                          noValue: true
                        correlationId:
                          noValue: true
                        entityId:
                          noValue: true
                        entityName:
                          noValue: true
                        userMessage:
                          noValue: true
                        userParamsMessage:
                          noValue: true
                        userParams.key:
                          noValue: true
                        userParams.value:
                          noValue: true
                        details.errorCode:
                          noValue: true
                        details.fieldName:
                          noValue: true
                        details.entityId:
                          noValue: true
                        details.entityName:
                          noValue: true
              outputs:
                success:
                  actions:
                    - decision:
                        name: Decision
                        condition:
                          exp: Task.IsFieldUpdated_ACCAPI1OP
                        outputs:
                          "yes":
                            actions:
                              - endTask:
                                  name: End Task
                                  outputPath:
                                    name: default
                          "no":
                            actions:
                              - endTask:
                                  name: End Task
                                  outputPath:
                                    name: Unable to Update
                failure:
                  actions:
                    - communicate:
                        name: Communicate
                        communication:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're currently facing some technical failure🔧 issues in ACCAPI7.\")))"
                timeout:
                  actions:
                    - communicate:
                        name: Communicate
                        communication:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're currently facing some technical timeout ⏲ issues in ACCAPI7.\")))"
          - jumpToTask:
              name: Jump to Reusable Task
              targetTaskRef: "/digitalBot/tasks/task[General- Disconnect_947]"
        outputPaths:
          - outputPath:
              name: Unable to Update
    - task:
        name: BNK-Banking Menu
        refId: BNK-Banking Menu_282
        actions:
          - digitalMenu:
              name: Digital Menu
              question:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"What would you like to do?\")))"
              noMatch:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Tell me again what you would like to do.\")))"
              selection:
                noValue: true
              knowledgeSearchResult:
                noValue: true
              chooser:
                lit:
                  presentation:
                    lit: quickReplies
                  carousel:
                    lit:
                      cards:
                        lit: []
                  quickReplies:
                    lit:
                      buttons:
                        lit:
                          - lit:
                              label:
                                noValue: true
                              value:
                                lit: Setup New Bank Account🏦
                              type:
                                lit: postback
                          - lit:
                              label:
                                noValue: true
                              value:
                                lit: Check My Account Balance💰
                              type:
                                lit: postback
                          - lit:
                              label:
                                noValue: true
                              value:
                                lit: Transaction Services🔂
                              type:
                                lit: postback
                          - lit:
                              label:
                                noValue: true
                              value:
                                lit: Bank Account Info📋
                              type:
                                lit: postback
                          - lit:
                              label:
                                noValue: true
                              value:
                                lit: Redeem Top-Up Voucher🔝
                              type:
                                lit: postback
                          - lit:
                              label:
                                noValue: true
                              value:
                                lit: Close Bank Account⛔
                              type:
                                lit: postback
                          - lit:
                              label:
                                noValue: true
                              value:
                                lit: Home🏠
                              type:
                                lit: postback
              outputs:
                maxNoInputs:
                  enabled: false
                paths:
                  - path:
                      name: Setup New Bank Account🏦
                      actions:
                        - jumpToTask:
                            name: Jump to Reusable Task
                            targetTaskRef: "/digitalBot/tasks/task[BNK1-Create New Bank Account_300]"
                  - path:
                      name: Check My Account Balance💰
                      actions:
                        - jumpToTask:
                            name: Jump to Reusable Task
                            targetTaskRef: "/digitalBot/tasks/task[BNK1-Check My Bank Account Balance_306]"
                  - path:
                      name: Transaction Services🔂
                      actions:
                        - jumpToTask:
                            name: Jump to Reusable Task
                            targetTaskRef: "/digitalBot/tasks/task[BNK1-Transaction Services_102]"
                  - path:
                      name: Bank Account Info📋
                      actions:
                        - jumpToTask:
                            name: Jump to Reusable Task
                            targetTaskRef: "/digitalBot/tasks/task[BNK1-Bank Account Info_407]"
                  - path:
                      name: Redeem Top-Up Voucher🔝
                      actions:
                        - jumpToTask:
                            name: Jump to Reusable Task
                            targetTaskRef: "/digitalBot/tasks/task[BNK1-Redeem Top-Up Voucher_414]"
                  - path:
                      name: Close Bank Account⛔
                      actions:
                        - communicate:
                            name: Communicate
                            communication:
                              exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"To close your active bank account, please raise a case with the following information🔔\")))"
                        - jumpToTask:
                            name: Jump to Reusable Task
                            targetTaskRef: "/digitalBot/tasks/task[CASE-Bank Account Closure_1002]"
                  - path:
                      name: Home🏠
                      actions:
                        - jumpToTask:
                            name: Jump to Reusable Task
                            targetTaskRef: "/digitalBot/tasks/task[General-Return To The Main Menu_946]"
    - task:
        name: BNK1-Bank Account Info
        refId: BNK1-Bank Account Info_407
        actions:
          - askForSlot:
              name: Ask for Slot
              slot:
                name: SourceBankAccountNumber
              question:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please enter your bank account number?🏛️\")))"
              customValidation:
                noValue: true
              confirmationMode:
                lit: never
              noMatch:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please enter valid bank account number?🏛️\")))"
              outputs:
                maxNoInputs:
                  enabled: false
          - askForSlot:
              name: Ask for Slot
              slot:
                name: A
              question:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please enter PIN associated with this bank account for verification.🔒\")))"
              customValidation:
                noValue: true
              confirmationMode:
                lit: never
              noMatch:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\" Invalid input. Please enter a valid 4-digit PIN to proceed.⚠️\")))"
              outputs:
                maxNoInputs:
                  enabled: false
          - updateData:
              name: Update Data
              statements:
                - string:
                    variable: Flow.BankAccountNumber_API14INP
                    value:
                      exp: Slot.SourceBankAccountNumber
                - string:
                    variable: Flow.PIN_API14INP
                    value:
                      exp: Slot.A
          - clearSlot:
              name: Clear Slot
              slots:
                - slot:
                    name: SourceBankAccountNumber
                - slot:
                    name: A
          - communicate:
              name: Communicate
              communication:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"🔍 Looking up your account information, please hold on...\")))"
          - callTask:
              name: Call Task
              targetTaskRef: "/digitalBot/tasks/task[BNKAPI9-GetBankAccUsingBankAccNumAndBankAccPIN_818]"
              outputs:
                default:
                  actions:
                    - decision:
                        name: Decision
                        condition:
                          exp: If(Flow.CustomerBackEndID==Flow.Contact_API14OP,true,false)
                        outputs:
                          "yes":
                            actions:
                              - communicate:
                                  name: Communicate
                                  communication:
                                    exp: "MakeCommunication(\n  ToCommunication(MakeCommunication(\"*Bank Account Details*📜\\n🏷️*Account Title:*\", Flow.BankAccountName_API14OP, \"\\n🔢 *Account Number:*\", Flow.AccountNumber_API14OP, \"\\n💰*Balance:* ₹\", Flow.Balance_API14OP, \"\\n🗃️*Account Type:*\", Flow.TypeOfBankAccount_API14OP, \"\\n🙎🏻‍♂️*Account Holder Name:*\", Flow.FirstName, \" \", Flow.LastName)))"
                          "no":
                            actions:
                              - communicate:
                                  name: Communicate
                                  communication:
                                    exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"🚫*Access Denied*🚫 It looks like you've successfully accessed bank account details that don't belong to you. For security reasons, you can only view your own account information.\")))"
                paths:
                  - path:
                      name: Unable to Get Bank Acc Info
                      actions:
                        - communicate:
                            name: Communicate
                            communication:
                              exp: "MakeCommunication(\n  ToCommunication(MakeCommunication(\"Unfortunately, I couldn't retrieve your account details😔.\\nReason: \", Flow.Message_API14OP)))"
          - communicate:
              name: Communicate
              communication:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Returning you to Main Menu🔄\")))"
          - jumpToTask:
              name: Jump to Reusable Task
              targetTaskRef: "/digitalBot/tasks/task[Main Menu_63]"
    - task:
        name: BNK1-Check My Bank Account Balance
        refId: BNK1-Check My Bank Account Balance_306
        actions:
          - callTask:
              name: Call Task
              targetTaskRef: "/digitalBot/tasks/task[BNKAPI4-Is Customer Having Atleast One Bank Acc_418]"
              outputs:
                default:
                  actions:
                    - callTask:
                        name: Call Task
                        targetTaskRef: "/digitalBot/tasks/task[BNKAPI5-CheckBankAccBalBasedOnBankAccNum_434]"
                        outputs:
                          default:
                            actions:
                              - decision:
                                  name: Decision
                                  condition:
                                    exp: If(Flow.ContactID_BNKAPI5OP==Flow.CustomerBackEndID,true,false)
                                  outputs:
                                    "yes":
                                      actions:
                                        - communicate:
                                            name: Communicate
                                            communication:
                                              exp: "MakeCommunication(\n  ToCommunication(MakeCommunication(\"You have ₹\", Flow.Balance_API9, \" in your bank account \", Flow.BankAccountNumber_API9, \"🥂\")))"
                                    "no":
                                      actions:
                                        - communicate:
                                            name: Communicate
                                            communication:
                                              exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Access restricted. It appears you have successfully accessed another customer's account balance, which is not permitted. 🚫🔒\")))"
                          paths:
                            - path:
                                name: ATM pin Invalid
                                actions:
                                  - communicate:
                                      name: Communicate
                                      communication:
                                        exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"The PIN you entered is incorrect. unable to retrieve your account balance.😒\")))"
                            - path:
                                name: Account Number Invalid
                                actions:
                                  - communicate:
                                      name: Communicate
                                      communication:
                                        exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"I could not find an bank account with that account number.🤷‍♂️\")))"
                    - communicate:
                        name: Communicate
                        communication:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Returing you to the Main Menu🔄....\")))"
                    - jumpToTask:
                        name: Jump to Reusable Task
                        targetTaskRef: "/digitalBot/tasks/task[Main Menu_63]"
                paths:
                  - path:
                      name: No-Customer Dont have bank acc
                      actions:
                        - askForBoolean:
                            name: Ask for Yes / No
                            question:
                              exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Currently, it seems you don't have a bank account registered with us. Would you like to create one now?🚫🙎\")))"
                            noMatch:
                              exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please input \\\"Yes\\\" or \\\"No\\\". Do you want to proceed?\")))"
                            outputs:
                              "yes":
                                actions:
                                  - jumpToTask:
                                      name: Jump to Reusable Task
                                      targetTaskRef: "/digitalBot/tasks/task[BNK1-Create New Bank Account_300]"
                              "no":
                                actions:
                                  - communicate:
                                      name: Communicate
                                      communication:
                                        exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Understood! If you decide to create a bank account in the future, just let me know.\")))"
                                  - communicate:
                                      name: Communicate
                                      communication:
                                        exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Returing you to the Main Menu🔄 \")))"
                                  - jumpToTask:
                                      name: Jump to Reusable Task
                                      targetTaskRef: "/digitalBot/tasks/task[Main Menu_63]"
                              maxNoInputs:
                                enabled: false
    - task:
        name: BNK1-Create New Bank Account
        refId: BNK1-Create New Bank Account_300
        actions:
          - communicate:
              name: Communicate
              communication:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please provide following required details to create a new bank account.📝\")))"
          - askForSlot:
              name: Ask for Slot
              slot:
                name: BankAccType
              question:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"What type of bank account you would like to create?🤔\")))"
              customValidation:
                noValue: true
              confirmationMode:
                lit: never
              chooser:
                lit:
                  presentation:
                    lit: quickReplies
                  carousel:
                    lit:
                      cards:
                        lit: []
                  quickReplies:
                    lit:
                      buttons:
                        lit:
                          - lit:
                              label:
                                noValue: true
                              value:
                                lit: Checking
                              type:
                                lit: postback
                          - lit:
                              label:
                                noValue: true
                              value:
                                lit: Saving
                              type:
                                lit: postback
                          - lit:
                              label:
                                noValue: true
                              value:
                                lit: Business
                              type:
                                lit: postback
                          - lit:
                              label:
                                noValue: true
                              value:
                                lit: Student
                              type:
                                lit: postback
                          - lit:
                              label:
                                noValue: true
                              value:
                                lit: Retirement
                              type:
                                lit: postback
              noMatch:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please give me the (please put your slot name here)\")))"
              outputs:
                maxNoInputs:
                  enabled: false
          - updateData:
              name: Update Data
              statements:
                - string:
                    variable: Flow.BankAccType
                    value:
                      exp: Slot.BankAccType
          - clearSlot:
              name: Clear Slot
              slots:
                - slot:
                    name: BankAccType
          - callTask:
              name: Call Task
              targetTaskRef: "/digitalBot/tasks/task[BNKAPI1-Is Customer Eligible to Take This Bank Acc Type_311]"
              outputs:
                default:
                  actions:
                    - callTask:
                        name: Call Task
                        targetTaskRef: "/digitalBot/tasks/task[BNKAPI2-Create New Bank Account Of Given Type_351]"
                        outputs:
                          default:
                            actions:
                              - callTask:
                                  name: Call Task
                                  targetTaskRef: "/digitalBot/tasks/task[BNKAPI3-GetBankAccountDetailsByBankAccBackEndID_376]"
                                  outputs:
                                    default:
                                      actions:
                                        - communicate:
                                            name: Communicate
                                            communication:
                                              exp: "MakeCommunication(\n  ToCommunication(MakeCommunication(\"*Your Bank Account Details:*\\n*Bank Account Type:* \", Flow.BankAccType, \"\\n*Account Name :* \", Flow.BankAccName, \"\\n*Account Number :* \", Flow.BankAccNumber, \"\\n*Account Holder Name:* \", Flow.FirstName, \" \", Flow.LastName, \"\\n*Account Balance:* ₹\", Flow.Balance)))"
                                        - digitalMenu:
                                            name: Digital Menu
                                            question:
                                              exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"What would you like to do?\")))"
                                            noMatch:
                                              exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Tell me again what you would like to do.\")))"
                                            selection:
                                              noValue: true
                                            knowledgeSearchResult:
                                              noValue: true
                                            chooser:
                                              lit:
                                                presentation:
                                                  lit: quickReplies
                                                carousel:
                                                  lit:
                                                    cards:
                                                      lit: []
                                                quickReplies:
                                                  lit:
                                                    buttons:
                                                      lit:
                                                        - lit:
                                                            label:
                                                              noValue: true
                                                            value:
                                                              lit: Add Funds💸
                                                            type:
                                                              lit: postback
                                                        - lit:
                                                            label:
                                                              noValue: true
                                                            value:
                                                              lit: Redeem Top-Up Voucher🔝
                                                            type:
                                                              lit: postback
                                                        - lit:
                                                            label:
                                                              noValue: true
                                                            value:
                                                              lit: Main Menu🏡
                                                            type:
                                                              lit: postback
                                            outputs:
                                              maxNoInputs:
                                                enabled: false
                                              paths:
                                                - path:
                                                    name: Add Funds💸
                                                    actions:
                                                      - jumpToTask:
                                                          name: Jump to Reusable Task
                                                          targetTaskRef: "/digitalBot/tasks/task[BNK2-Deposit_458]"
                                                - path:
                                                    name: Redeem Top-Up Voucher🔝
                                                    actions:
                                                      - jumpToTask:
                                                          name: Jump to Reusable Task
                                                          targetTaskRef: "/digitalBot/tasks/task[BNK1-Redeem Top-Up Voucher_414]"
                                                - path:
                                                    name: Main Menu🏡
                                                    actions:
                                                      - jumpToTask:
                                                          name: Jump to Reusable Task
                                                          targetTaskRef: "/digitalBot/tasks/task[Main Menu_63]"
                                    paths:
                                      - path:
                                          name: Unable to get Bank Account Details
                                          actions:
                                            - communicate:
                                                name: Communicate
                                                communication:
                                                  exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Your account has been successfully created. We are currently unable to fetch the account details. Returning to the Main Menu\")))"
                                            - jumpToTask:
                                                name: Jump to Reusable Task
                                                targetTaskRef: "/digitalBot/tasks/task[Main Menu_63]"
                          paths:
                            - path:
                                name: Unable to Create Bank Account
                                actions:
                                  - communicate:
                                      name: Communicate
                                      communication:
                                        exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Unfortunately, your bank account could not be created\")))"
                                  - jumpToTask:
                                      name: Jump to Reusable Task
                                      targetTaskRef: "/digitalBot/tasks/task[Main Menu_63]"
                paths:
                  - path:
                      name: Not Eligible
                      actions:
                        - digitalMenu:
                            name: Digital Menu
                            question:
                              exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Since you already have this type of bank account, you can't open another.❌\")))"
                            noMatch:
                              exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please select only from the provided options.📑\")))"
                            selection:
                              noValue: true
                            knowledgeSearchResult:
                              noValue: true
                            chooser:
                              lit:
                                presentation:
                                  lit: quickReplies
                                carousel:
                                  lit:
                                    cards:
                                      lit: []
                                quickReplies:
                                  lit:
                                    buttons:
                                      lit:
                                        - lit:
                                            label:
                                              noValue: true
                                            value:
                                              lit: Would you like to take different type of bank account?💁‍♂️
                                            type:
                                              lit: postback
                                        - lit:
                                            label:
                                              noValue: true
                                            value:
                                              lit: Return to Main Menu🏡
                                            type:
                                              lit: postback
                                        - lit:
                                            label:
                                              noValue: true
                                            value:
                                              lit: Exit from Chat➡️
                                            type:
                                              lit: postback
                            outputs:
                              maxNoInputs:
                                enabled: false
                              paths:
                                - path:
                                    name: Would you like to take different type of bank account?💁‍♂️
                                    actions:
                                      - jumpToTask:
                                          name: Jump to Reusable Task
                                          targetTaskRef: "/digitalBot/tasks/task[BNK1-Create New Bank Account_300]"
                                - path:
                                    name: Return to Main Menu🏡
                                    actions:
                                      - jumpToTask:
                                          name: Jump to Reusable Task
                                          targetTaskRef: "/digitalBot/tasks/task[Main Menu_63]"
                                - path:
                                    name: Exit from Chat➡️
                                    actions:
                                      - jumpToTask:
                                          name: Jump to Reusable Task
                                          targetTaskRef: "/digitalBot/tasks/task[General- Exit from Chat_276]"
    - task:
        name: BNK1-Redeem Top-Up Voucher
        refId: BNK1-Redeem Top-Up Voucher_414
        actions:
          - askForSlot:
              name: Ask for Slot
              slot:
                name: VoucherCode
              question:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please Enter Top-up Voucher code?\")))"
              customValidation:
                noValue: true
              confirmationMode:
                lit: never
              noMatch:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please Enter valid Top-up Voucher code?\")))"
              outputs:
                maxNoInputs:
                  enabled: false
          - updateData:
              name: Update Data
              statements:
                - string:
                    variable: Flow.TopUpVoucherCode
                    value:
                      exp: Slot.VoucherCode
          - clearSlot:
              name: Clear Slot
              slots:
                - slot:
                    name: VoucherCode
          - askForSlot:
              name: Ask for Slot
              slot:
                name: SourceBankAccountNumber
              question:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please enter account number you want to Top-up?\")))"
              customValidation:
                noValue: true
              confirmationMode:
                lit: never
              noMatch:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please enter valid account number you want to Top-up?\\n_Format: CUST-XXXX_\")))"
              outputs:
                maxNoInputs:
                  enabled: false
          - updateData:
              name: Update Data
              statements:
                - string:
                    variable: Flow.AccountNumber_API13_INP
                    value:
                      exp: Slot.SourceBankAccountNumber
          - clearSlot:
              name: Clear Slot
              slots:
                - slot:
                    name: SourceBankAccountNumber
          - callTask:
              name: Call Task
              targetTaskRef: "/digitalBot/tasks/task[BNKAPI10-Process TopUp Voucher_563]"
              outputs:
                default:
                  actions:
                    - communicate:
                        name: Communicate
                        communication:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Successfully redeemed your vocher. \")))"
                    - digitalMenu:
                        name: Digital Menu
                        question:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"What would you like to do?\")))"
                        noMatch:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Tell me again what you would like to do.\")))"
                        selection:
                          noValue: true
                        knowledgeSearchResult:
                          noValue: true
                        chooser:
                          lit:
                            presentation:
                              lit: quickReplies
                            carousel:
                              lit:
                                cards:
                                  lit: []
                            quickReplies:
                              lit:
                                buttons:
                                  lit:
                                    - lit:
                                        label:
                                          noValue: true
                                        value:
                                          lit: Check Account Balance
                                        type:
                                          lit: postback
                                    - lit:
                                        label:
                                          noValue: true
                                        value:
                                          lit: Main Menu
                                        type:
                                          lit: postback
                        outputs:
                          maxNoInputs:
                            enabled: false
                          paths:
                            - path:
                                name: Check Account Balance
                                actions:
                                  - jumpToTask:
                                      name: Jump to Reusable Task
                                      targetTaskRef: "/digitalBot/tasks/task[BNK1-Check My Bank Account Balance_306]"
                paths:
                  - path:
                      name: Unable To Redeem Voucher
                      actions:
                        - communicate:
                            name: Communicate
                            communication:
                              exp: "MakeCommunication(\n  ToCommunication(MakeCommunication(Flow.VoucherCodeFailReason, \"\\nReturning to the Main Menu.\")))"
          - jumpToTask:
              name: Jump to Reusable Task
              targetTaskRef: "/digitalBot/tasks/task[Main Menu_63]"
        outputPaths:
          - outputPath:
              name: Unable to Redeem Voucher
    - task:
        name: BNK1-Transaction Services
        refId: BNK1-Transaction Services_102
        actions:
          - digitalMenu:
              name: Digital Menu
              question:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"What would you like to do❓\")))"
              noMatch:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Tell me again what you would like to do.\")))"
              selection:
                noValue: true
              knowledgeSearchResult:
                noValue: true
              chooser:
                lit:
                  presentation:
                    lit: quickReplies
                  carousel:
                    lit:
                      cards:
                        lit: []
                  quickReplies:
                    lit:
                      buttons:
                        lit:
                          - lit:
                              label:
                                noValue: true
                              value:
                                lit: Deposit📥
                              type:
                                lit: postback
                          - lit:
                              label:
                                noValue: true
                              value:
                                lit: Withdrawal📤
                              type:
                                lit: postback
                          - lit:
                              label:
                                noValue: true
                              value:
                                lit: Funds Transfer🔁
                              type:
                                lit: postback
              outputs:
                maxNoInputs:
                  enabled: false
                paths:
                  - path:
                      name: Deposit📥
                      actions:
                        - jumpToTask:
                            name: Jump to Reusable Task
                            targetTaskRef: "/digitalBot/tasks/task[BNK2-Deposit_458]"
                  - path:
                      name: Withdrawal📤
                      actions:
                        - jumpToTask:
                            name: Jump to Reusable Task
                            targetTaskRef: "/digitalBot/tasks/task[BNK2-Withdrwal_459]"
                  - path:
                      name: Funds Transfer🔁
                      actions:
                        - jumpToTask:
                            name: Jump to Reusable Task
                            targetTaskRef: "/digitalBot/tasks/task[BNK2-FundTransfer_460]"
    - task:
        name: BNK2-Deposit
        refId: BNK2-Deposit_458
        actions:
          - askForSlot:
              name: Ask for Slot
              slot:
                name: SourceBankAccountNumber
              question:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please provide the bank account number?✍\")))"
              customValidation:
                noValue: true
              confirmationMode:
                lit: never
              noMatch:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please enter valid bank account number?\\n_Format: CUST-XXXX_\")))"
              outputs:
                maxNoInputs:
                  enabled: false
          - askForSlot:
              name: Ask for Slot
              slot:
                name: TransactionAmount
              question:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please enter how much amount you want to Deposit?💲\")))"
              customValidation:
                noValue: true
              confirmationMode:
                lit: never
              noMatch:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please enter how much amount you want to Deposit?\\n_Amount must be greater than 0_\")))"
              outputs:
                maxNoInputs:
                  enabled: false
          - askForSlot:
              name: Ask for Slot
              slot:
                name: TransactionReason
              question:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please enter Reason for the Deposit?🤔\")))"
              customValidation:
                noValue: true
              confirmationMode:
                lit: never
              noMatch:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please enter valid reason for the Transaction?🤔\")))"
              outputs:
                maxNoInputs:
                  enabled: false
          - updateData:
              name: Update Data
              statements:
                - string:
                    variable: Flow.TransactionType_API10
                    value:
                      exp: "\"Deposit\""
                - string:
                    variable: Flow.SourceBankAccountNumber_API10
                    value:
                      exp: Slot.SourceBankAccountNumber
                - string:
                    variable: Flow.ReasonForTheTransaction_API10
                    value:
                      exp: Slot.TransactionReason
                - string:
                    variable: Flow.DestinationBankAccountNumber_API10
                    value:
                      exp: "\"Not Applicable\""
                - decimal:
                    variable: Flow.TransactionAmount_API10
                    value:
                      exp: ToDecimal(Slot.TransactionAmount)
          - clearSlot:
              name: Clear Slot
              slots:
                - slot:
                    name: SourceBankAccountNumber
                - slot:
                    name: DestinationBankAccountNumber
                - slot:
                    name: TransactionAmount
                - slot:
                    name: TransactionReason
          - callTask:
              name: Call Task
              targetTaskRef: "/digitalBot/tasks/task[BNKAPI6-Create a Bank Transaction_481]"
              outputs:
                default:
                  actions:
                    - callTask:
                        name: Call Task
                        targetTaskRef: "/digitalBot/tasks/task[ACCAPI5-Validate Master PIN_720]"
                        outputs:
                          default:
                            actions:
                              - callTask:
                                  name: Call Task
                                  targetTaskRef: "/digitalBot/tasks/task[BNKAPI8-Process Transaction_506]"
                                  outputs:
                                    default:
                                      actions:
                                        - communicate:
                                            name: Communicate
                                            communication:
                                              exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Your transaction is successfully completed.✅\")))"
                                    paths:
                                      - path:
                                          name: Unable to complete Transaction
                                          actions:
                                            - communicate:
                                                name: Communicate
                                                communication:
                                                  exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Error occured while completing the Transaction. Please try again later.⚠️\")))"
                          paths:
                            - path:
                                name: Invalid PIN
                                actions:
                                  - communicate:
                                      name: Communicate
                                      communication:
                                        exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Verification failed as the Master PIN entered was incorrect. Deposit unsuccessful. 🚫🔑\")))"
                paths:
                  - path:
                      name: Unable to Create Transaction
                      actions:
                        - communicate:
                            name: Communicate
                            communication:
                              exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Entered transaction details are Incorrect. Please check the details and then Initiate the new Transaction.✍❌\")))"
          - jumpToTask:
              name: Jump to Reusable Task
              targetTaskRef: "/digitalBot/tasks/task[General-Return To The Main Menu_946]"
    - task:
        name: BNK2-FundTransfer
        refId: BNK2-FundTransfer_460
        actions:
          - askForSlot:
              name: Ask for Slot
              slot:
                name: SourceBankAccountNumber
              question:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please enter source bank account number?➡️\")))"
              customValidation:
                noValue: true
              confirmationMode:
                lit: never
              noMatch:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please enter valid source bank account number?\\n_Format: CUST-XXXX_➡️\")))"
              outputs:
                maxNoInputs:
                  enabled: false
          - askForSlot:
              name: Ask for Slot
              slot:
                name: DestinationBankAccountNumber
              question:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please enter destination bank account number?⬅️\")))"
              customValidation:
                noValue: true
              confirmationMode:
                lit: never
              noMatch:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please enter valid destination bank account number?\\n_Format: CUST-XXXX_⬅️\")))"
              outputs:
                maxNoInputs:
                  enabled: false
          - askForSlot:
              name: Ask for Slot
              slot:
                name: TransactionAmount
              question:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please enter how much amount you want to Transfer?💰\")))"
              customValidation:
                noValue: true
              confirmationMode:
                lit: never
              noMatch:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please enter how much amount you want to Transfer?\\n_Amount must be greater than 0_💰\")))"
              outputs:
                maxNoInputs:
                  enabled: false
          - askForSlot:
              name: Ask for Slot
              slot:
                name: TransactionReason
              question:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please enter Reason for this Transfer Transaction❓\")))"
              customValidation:
                noValue: true
              confirmationMode:
                lit: never
              noMatch:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please enter Reason for this Transfer Transaction?\")))"
              outputs:
                maxNoInputs:
                  enabled: false
          - updateData:
              name: Update Data
              statements:
                - string:
                    variable: Flow.TransactionType_API10
                    value:
                      exp: ToString("Transfer")
                - string:
                    variable: Flow.SourceBankAccountNumber_API10
                    value:
                      exp: Slot.SourceBankAccountNumber
                - string:
                    variable: Flow.DestinationBankAccountNumber_API10
                    value:
                      exp: Slot.DestinationBankAccountNumber
                - decimal:
                    variable: Flow.TransactionAmount_API10
                    value:
                      exp: Slot.TransactionAmount
                - string:
                    variable: Flow.ReasonForTheTransaction_API10
                    value:
                      exp: Slot.TransactionReason
          - clearSlot:
              name: Clear Slot
              slots:
                - slot:
                    name: SourceBankAccountNumber
                - slot:
                    name: DestinationBankAccountNumber
                - slot:
                    name: TransactionAmount
                - slot:
                    name: TransactionReason
          - callTask:
              name: Call Task
              targetTaskRef: "/digitalBot/tasks/task[BNKAPI6-Create a Bank Transaction_481]"
              outputs:
                default:
                  actions:
                    - callTask:
                        name: Call Task
                        targetTaskRef: "/digitalBot/tasks/task[BNK3-Collect PIN And Process Transaction_508]"
                        outputs:
                          default:
                            actions:
                              - communicate:
                                  name: Communicate
                                  communication:
                                    exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Your transaction is successfully completed.✅\")))"
                          paths:
                            - path:
                                name: Unable to Complete Transaction
                                actions:
                                  - communicate:
                                      name: Communicate
                                      communication:
                                        exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Error occured while completing the Transaction. Please try again later.⚠️\")))"
                paths:
                  - path:
                      name: Unable to Create Transaction
                      actions:
                        - communicate:
                            name: Communicate
                            communication:
                              exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Entered transaction details are Incorrect. Please check the details and then Initiate the new Transaction.✖\")))"
          - communicate:
              name: Communicate
              communication:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Return to Main Menu🔄 \")))"
          - jumpToTask:
              name: Jump to Reusable Task
              targetTaskRef: "/digitalBot/tasks/task[Main Menu_63]"
    - task:
        name: BNK2-Withdrwal
        refId: BNK2-Withdrwal_459
        actions:
          - askForSlot:
              name: Ask for Slot
              slot:
                name: SourceBankAccountNumber
              question:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please provide the bank account number?✍\")))"
              customValidation:
                noValue: true
              confirmationMode:
                lit: never
              noMatch:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please enter valid bank account number?\\n_Format: CUST-XXXX_✍\")))"
              outputs:
                maxNoInputs:
                  enabled: false
          - askForSlot:
              name: Ask for Slot
              slot:
                name: TransactionAmount
              question:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please enter how much amount you want to Withdrawal?📤\")))"
              customValidation:
                noValue: true
              confirmationMode:
                lit: never
              noMatch:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please enter how much amount you want to Withdrawal?\\n_Amount must be greater than 0_📤\")))"
              outputs:
                maxNoInputs:
                  enabled: false
          - askForSlot:
              name: Ask for Slot
              slot:
                name: TransactionReason
              question:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please enter Reason for the Withdrawal❓\")))"
              customValidation:
                noValue: true
              confirmationMode:
                lit: never
              noMatch:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please enter valid reason for the Transaction❓\")))"
              outputs:
                maxNoInputs:
                  enabled: false
          - updateData:
              name: Update Data
              statements:
                - string:
                    variable: Flow.TransactionType_API10
                    value:
                      exp: ToString("Withdrawal")
                - string:
                    variable: Flow.SourceBankAccountNumber_API10
                    value:
                      exp: Slot.SourceBankAccountNumber
                - string:
                    variable: Flow.ReasonForTheTransaction_API10
                    value:
                      exp: Slot.TransactionReason
                - string:
                    variable: Flow.DestinationBankAccountNumber_API10
                    value:
                      exp: "\"Not Applicable\""
                - decimal:
                    variable: Flow.TransactionAmount_API10
                    value:
                      exp: Slot.TransactionAmount
          - clearSlot:
              name: Clear Slot
              slots:
                - slot:
                    name: SourceBankAccountNumber
                - slot:
                    name: DestinationBankAccountNumber
                - slot:
                    name: TransactionAmount
                - slot:
                    name: TransactionReason
          - callTask:
              name: Call Task
              targetTaskRef: "/digitalBot/tasks/task[BNKAPI6-Create a Bank Transaction_481]"
              outputs:
                default:
                  actions:
                    - callTask:
                        name: Call Task
                        targetTaskRef: "/digitalBot/tasks/task[BNK3-Collect PIN And Process Transaction_508]"
                        outputs:
                          default:
                            actions:
                              - communicate:
                                  name: Communicate
                                  communication:
                                    exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Your transaction is successfully completed.✅\")))"
                          paths:
                            - path:
                                name: Unable to Complete Transaction
                                actions:
                                  - communicate:
                                      name: Communicate
                                      communication:
                                        exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Error occured while completing the Transaction. Please try again later.❌\")))"
                paths:
                  - path:
                      name: Unable to Create Transaction
                      actions:
                        - communicate:
                            name: Communicate
                            communication:
                              exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Entered transaction details are Incorrect. Please check the details and then Initiate the new Transaction.❌\")))"
          - communicate:
              name: Communicate
              communication:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Return to Main Menu🔄 \")))"
          - jumpToTask:
              name: Jump to Reusable Task
              targetTaskRef: "/digitalBot/tasks/task[Main Menu_63]"
    - task:
        name: BNK3-Collect PIN And Process Transaction
        refId: BNK3-Collect PIN And Process Transaction_508
        actions:
          - askForSlot:
              name: Ask for Slot
              slot:
                name: A
              question:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please enter your 4 digits account PIN to comeplete the transaction?\")))"
              customValidation:
                noValue: true
              confirmationMode:
                lit: never
              noMatch:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please enter valid account PIN to comeplete the transaction?\\n_Format: XXXX_\")))"
              outputs:
                maxNoInputs:
                  enabled: false
          - updateData:
              name: Update Data
              statements:
                - string:
                    variable: Flow.PIN_API11
                    value:
                      exp: Slot.A
          - clearSlot:
              name: Clear Slot
              slots:
                - slot:
                    name: A
          - callTask:
              name: Call Task
              targetTaskRef: "/digitalBot/tasks/task[BNKAPI7-Validate Bank Account PIN_502]"
              outputs:
                default:
                  actions:
                    - callTask:
                        name: Call Task
                        targetTaskRef: "/digitalBot/tasks/task[BNKAPI8-Process Transaction_506]"
                        outputs:
                          default:
                            actions:
                              - communicate:
                                  name: Communicate
                                  communication:
                                    exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Your transaction is successfully completed.✅\")))"
                          paths:
                            - path:
                                name: Unable to complete Transaction
                                actions:
                                  - communicate:
                                      name: Communicate
                                      communication:
                                        exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Error occured while completing the Transaction. Please try again later.⚠️\")))"
                paths:
                  - path:
                      name: Invalid PIN
                      actions:
                        - communicate:
                            name: Communicate
                            communication:
                              exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Verification failed as the Account PIN entered was incorrect.🚫🔑\")))"
          - jumpToTask:
              name: Jump to Reusable Task
              targetTaskRef: "/digitalBot/tasks/task[General-Return To The Main Menu_946]"
        outputPaths:
          - outputPath:
              name: Unable to Complete Transaction
    - task:
        name: BNKAPI1-Is Customer Eligible to Take This Bank Acc Type
        refId: BNKAPI1-Is Customer Eligible to Take This Bank Acc Type_311
        variables:
          - booleanVariable:
              name: Task.Iseligible
              initialValue:
                noValue: true
              isInput: false
              isOutput: false
        actions:
          - communicate:
              name: Communicate
              communication:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please wait while I check your eligibility for the selected bank account type. 🔍\")))"
          - callData:
              name: Call Data Action
              timeout:
                lit:
                  minutes: 1
              category:
                Salesforce Data Actions-SKRA:
                  dataAction:
                    IAS- Banking-Check Customer Is Eligible To Take Given Bank Account Type:
                      inputs:
                        CustomerBackEndID:
                          exp: Flow.CustomerBackEndID
                        AccountType:
                          exp: Flow.BankAccType
                      successOutputs:
                        eligible:
                          var: Task.Iseligible
                        message:
                          noValue: true
                      failureOutputs:
                        errorCode:
                          noValue: true
                        status:
                          noValue: true
                        correlationId:
                          noValue: true
                        entityId:
                          noValue: true
                        entityName:
                          noValue: true
                        userMessage:
                          noValue: true
                        userParamsMessage:
                          noValue: true
                        userParams.key:
                          noValue: true
                        userParams.value:
                          noValue: true
                        details.errorCode:
                          noValue: true
                        details.fieldName:
                          noValue: true
                        details.entityId:
                          noValue: true
                        details.entityName:
                          noValue: true
              outputs:
                success:
                  actions:
                    - decision:
                        name: Decision
                        condition:
                          exp: Task.Iseligible
                        outputs:
                          "yes":
                            actions:
                              - endTask:
                                  name: End Task
                                  outputPath:
                                    name: default
                          "no":
                            actions:
                              - endTask:
                                  name: End Task
                                  outputPath:
                                    name: Not Eligible
                failure:
                  actions:
                    - communicate:
                        name: Communicate
                        communication:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're currently facing some technical failure issues in API5. Please reach us again after some time.\")))"
                timeout:
                  actions:
                    - communicate:
                        name: Communicate
                        communication:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're currently facing some technical timeout issues in API5. Please reach us again after some time.\")))"
          - disconnect:
              name: Disconnect
        outputPaths:
          - outputPath:
              name: Not Eligible
    - task:
        name: BNKAPI10-Process TopUp Voucher
        refId: BNKAPI10-Process TopUp Voucher_563
        variables:
          - booleanVariable:
              name: Task.IsVoucherValid
              initialValue:
                noValue: true
              isInput: false
              isOutput: false
          - stringVariable:
              name: Task.MessageKey
              initialValue:
                noValue: true
              isInput: false
              isOutput: false
        actions:
          - callData:
              name: Call Data Action
              timeout:
                lit:
                  minutes: 1
              category:
                Salesforce Data Actions-SKRA:
                  dataAction:
                    IAS-Banking-VoucherCodes:
                      inputs:
                        VoucherCode:
                          exp: Flow.TopUpVoucherCode
                        BankAccountNumber:
                          exp: Flow.AccountNumber_API13_INP
                      successOutputs:
                        IsVoucherValid:
                          var: Task.IsVoucherValid
                        MessageKey:
                          var: Task.MessageKey
                        Message:
                          noValue: true
                      failureOutputs:
                        errorCode:
                          noValue: true
                        status:
                          noValue: true
                        correlationId:
                          noValue: true
                        entityId:
                          noValue: true
                        entityName:
                          noValue: true
                        userMessage:
                          noValue: true
                        userParamsMessage:
                          noValue: true
                        userParams.key:
                          noValue: true
                        userParams.value:
                          noValue: true
                        details.errorCode:
                          noValue: true
                        details.fieldName:
                          noValue: true
                        details.entityId:
                          noValue: true
                        details.entityName:
                          noValue: true
              outputs:
                success:
                  actions:
                    - decision:
                        name: Decision
                        condition:
                          exp: Task.IsVoucherValid
                        outputs:
                          "yes":
                            actions:
                              - endTask:
                                  name: End Task
                                  outputPath:
                                    name: default
                          "no":
                            actions:
                              - switch:
                                  name: Switch
                                  evaluate:
                                    firstMatch:
                                      string:
                                        value:
                                          exp: Task.MessageKey
                                        default:
                                          actions:
                                            - updateData:
                                                name: Update Data
                                                statements:
                                                  - string:
                                                      variable: Flow.VoucherCodeFailReason
                                                      value:
                                                        lit: Failed to redeem voucher due to technical issues
                                        cases:
                                          - case:
                                              value:
                                                lit: VOUCHER_CODE_REQUIRED
                                              actions:
                                                - updateData:
                                                    name: Update Data
                                                    statements:
                                                      - string:
                                                          variable: Flow.VoucherCodeFailReason
                                                          value:
                                                            lit: Voucher code is required.
                                          - case:
                                              value:
                                                lit: ACCOUNT_NUMBER_REQUIRED
                                              actions:
                                                - updateData:
                                                    name: Update Data
                                                    statements:
                                                      - string:
                                                          variable: Flow.VoucherCodeFailReason
                                                          value:
                                                            lit: Account number is required.
                                          - case:
                                              value:
                                                lit: INVALID_VOUCHER_CODE
                                              actions:
                                                - updateData:
                                                    name: Update Data
                                                    statements:
                                                      - string:
                                                          variable: Flow.VoucherCodeFailReason
                                                          value:
                                                            lit: Invalid voucher code.
                                          - case:
                                              value:
                                                lit: VOUCHER_ALREADY_REDEEMED
                                              actions:
                                                - updateData:
                                                    name: Update Data
                                                    statements:
                                                      - string:
                                                          variable: Flow.VoucherCodeFailReason
                                                          value:
                                                            lit: This voucher has already been redeemed.
                                          - case:
                                              value:
                                                lit: INVALID_ACCOUNT_NUMBER
                                              actions:
                                                - updateData:
                                                    name: Update Data
                                                    statements:
                                                      - string:
                                                          variable: Flow.VoucherCodeFailReason
                                                          value:
                                                            lit: Invalid account number.
                                          - case:
                                              value:
                                                lit: VOUCHER_REDEEMED
                                              actions:
                                                - updateData:
                                                    name: Update Data
                                                    statements:
                                                      - string:
                                                          variable: Flow.VoucherCodeFailReason
                                                          value:
                                                            lit: Voucher redeemed successfully.
                              - endTask:
                                  name: End Task
                                  outputPath:
                                    name: Unable To Redeem Voucher
                failure:
                  actions:
                    - communicate:
                        name: Communicate
                        communication:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're currently facing some failure technical issues in API13. Please reach us again after some time.\")))"
                timeout:
                  actions:
                    - communicate:
                        name: Communicate
                        communication:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're currently facing some timeout technical issues in API13. Please reach us again after some time.\")))"
          - disconnect:
              name: Disconnect
        outputPaths:
          - outputPath:
              name: Unable To Redeem Voucher
    - task:
        name: BNKAPI2-Create New Bank Account Of Given Type
        refId: BNKAPI2-Create New Bank Account Of Given Type_351
        variables:
          - integerVariable:
              name: Task.AccountPINIndex
              initialValue:
                noValue: true
              isInput: false
              isOutput: false
          - booleanVariable:
              name: Task.IsBankAccCreated
              initialValue:
                noValue: true
              isInput: false
              isOutput: false
        actions:
          - askForSlot:
              name: Ask for Slot
              slot:
                name: BankAccountName
              question:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"What would you like to name your new bank account?\")))"
              customValidation:
                noValue: true
              confirmationMode:
                lit: never
              noMatch:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"What would you like to name your new bank account?\")))"
              outputs:
                maxNoInputs:
                  enabled: false
          - updateData:
              name: Update Data
              statements:
                - string:
                    variable: Flow.BankAccName
                    value:
                      exp: Slot.BankAccountName
          - clearSlot:
              name: Clear Slot
              slots:
                - slot:
                    name: BankAccountName
          - loop:
              name: Loop
              currentIndex:
                var: Task.AccountPINIndex
              loopCount:
                lit: 2
              outputs:
                loop:
                  actions:
                    - askForSlot:
                        name: Ask for Slot
                        slot:
                          name: A
                        question:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please set 4 digits Account PIN.\")))"
                        customValidation:
                          noValue: true
                        confirmationMode:
                          lit: never
                        noMatch:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please set 4 digits Account PIN. \\n_Only numbers are allowed._\")))"
                        outputs:
                          maxNoInputs:
                            enabled: false
                    - askForSlot:
                        name: Ask for Slot
                        slot:
                          name: B
                        question:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please Re-enter same 4 digits Account PIN once again.\")))"
                        customValidation:
                          noValue: true
                        confirmationMode:
                          lit: never
                        noMatch:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please Re-enter same 4 digits Account PIN once again.\")))"
                        outputs:
                          maxNoInputs:
                            enabled: false
                    - decision:
                        name: Decision
                        condition:
                          exp: if(Slot.A==Slot.B,true,false)
                        outputs:
                          "yes":
                            actions:
                              - updateData:
                                  name: Update Data
                                  statements:
                                    - string:
                                        variable: Flow.CustomerAccountPIN
                                        value:
                                          exp: Slot.A
                                    - string:
                                        variable: Flow.InitialBankBalance
                                        value:
                                          lit: "0"
                              - loopExit:
                                  name: Exit Loop
                          "no":
                            actions:
                              - decision:
                                  name: Decision
                                  condition:
                                    exp: Task.AccountPINIndex<1
                                  outputs:
                                    "yes":
                                      actions:
                                        - communicate:
                                            name: Communicate
                                            communication:
                                              exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Oops! It looks like the PIN's you entered don't match. One more chance.\")))"
                                        - clearSlot:
                                            name: Clear Slot
                                            slots:
                                              - slot:
                                                  name: A
                                              - slot:
                                                  name: B
                                        - loopNext:
                                            name: Next Loop
                                    "no":
                                      actions:
                                        - communicate:
                                            name: Communicate
                                            communication:
                                              exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Oops! It looks like the PIN's you entered don't match once again. Taking you to the Main Menu.\")))"
                                        - jumpToTask:
                                            name: Jump to Reusable Task
                                            targetTaskRef: "/digitalBot/tasks/task[Main Menu_63]"
          - communicate:
              name: Communicate
              communication:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Setting up your new bank account. Please wait. 🏦⚙️\")))"
          - callData:
              name: Call Data Action
              timeout:
                lit:
                  minutes: 1
              category:
                Salesforce Data Actions-SKRA:
                  dataAction:
                    IAS-Banking-Create Bank Account In BankAccount Object:
                      inputs:
                        CustomerBackEndID:
                          exp: Flow.CustomerBackEndID
                        BankAccountName:
                          exp: Flow.BankAccName
                        AccountPIN:
                          exp: Flow.CustomerAccountPIN
                        AccountType:
                          exp: Flow.BankAccType
                        InitialBalance:
                          exp: Flow.InitialBankBalance
                      successOutputs:
                        id:
                          var: Flow.CustomerBankAccountBackendID
                        success:
                          var: Task.IsBankAccCreated
                        errors:
                          noValue: true
                      failureOutputs:
                        errorCode:
                          noValue: true
                        status:
                          noValue: true
                        correlationId:
                          noValue: true
                        entityId:
                          noValue: true
                        entityName:
                          noValue: true
                        userMessage:
                          noValue: true
                        userParamsMessage:
                          noValue: true
                        userParams.key:
                          noValue: true
                        userParams.value:
                          noValue: true
                        details.errorCode:
                          noValue: true
                        details.fieldName:
                          noValue: true
                        details.entityId:
                          noValue: true
                        details.entityName:
                          noValue: true
              outputs:
                success:
                  actions:
                    - decision:
                        name: Decision
                        condition:
                          exp: Task.IsBankAccCreated
                        outputs:
                          "yes":
                            actions:
                              - endTask:
                                  name: End Task
                                  outputPath:
                                    name: default
                          "no":
                            actions:
                              - endTask:
                                  name: End Task
                                  outputPath:
                                    name: Unable to Create Bank Account
                failure:
                  actions:
                    - communicate:
                        name: Communicate
                        communication:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're currently facing some technical failure🔧 issues in BNKAPI2.\")))"
                timeout:
                  actions:
                    - communicate:
                        name: Communicate
                        communication:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're currently facing some technical timeout ⏲ issues in BNKAPI2.\")))"
          - jumpToTask:
              name: Jump to Reusable Task
              targetTaskRef: "/digitalBot/tasks/task[General- Disconnect_947]"
        outputPaths:
          - outputPath:
              name: Unable to Create Bank Account
    - task:
        name: BNKAPI3-GetBankAccountDetailsByBankAccBackEndID
        refId: BNKAPI3-GetBankAccountDetailsByBankAccBackEndID_376
        variables:
          - booleanVariable:
              name: Task.IsNewBankAccRowFound
              initialValue:
                noValue: true
              isInput: false
              isOutput: false
        actions:
          - communicate:
              name: Communicate
              communication:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Fetching your bank account details. Please wait. 🏦🗂️\")))"
          - callData:
              name: Call Data Action
              timeout:
                lit:
                  minutes: 1
              category:
                Salesforce Data Actions-SKRA:
                  dataAction:
                    IAS-Banking-GetBankAccountDetailsUsingBankAccountRecordBackendID:
                      inputs:
                        BankAccountID:
                          exp: Flow.CustomerBankAccountBackendID
                      successOutputs:
                        TypeOfTheBankAccount:
                          var: Flow.BankAccType
                        PIN:
                          noValue: true
                        Name:
                          var: Flow.BankAccName
                        Contact:
                          noValue: true
                        Balance:
                          var: Flow.Balance
                        AccountNumber:
                          var: Flow.BankAccNumber
                        rowFound:
                          var: Task.IsNewBankAccRowFound
                      failureOutputs:
                        errorCode:
                          noValue: true
                        status:
                          noValue: true
                        correlationId:
                          noValue: true
                        entityId:
                          noValue: true
                        entityName:
                          noValue: true
                        userMessage:
                          noValue: true
                        userParamsMessage:
                          noValue: true
                        userParams.key:
                          noValue: true
                        userParams.value:
                          noValue: true
                        details.errorCode:
                          noValue: true
                        details.fieldName:
                          noValue: true
                        details.entityId:
                          noValue: true
                        details.entityName:
                          noValue: true
              outputs:
                success:
                  actions:
                    - decision:
                        name: Decision
                        condition:
                          exp: Task.IsNewBankAccRowFound
                        outputs:
                          "yes":
                            actions:
                              - endTask:
                                  name: End Task
                                  outputPath:
                                    name: default
                          "no":
                            actions:
                              - endTask:
                                  name: End Task
                                  outputPath:
                                    name: Unable to get Bank Account Details
                failure:
                  actions:
                    - communicate:
                        name: Communicate
                        communication:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're currently facing some failure technical issues in API7. Please reach us again after some time.\")))"
                timeout:
                  actions:
                    - communicate:
                        name: Communicate
                        communication:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're currently facing some timeout technical issues in API7. Please reach us again after some time.\")))"
          - disconnect:
              name: Disconnect
        outputPaths:
          - outputPath:
              name: Unable to get Bank Account Details
    - task:
        name: BNKAPI4-Is Customer Having Atleast One Bank Acc
        refId: BNKAPI4-Is Customer Having Atleast One Bank Acc_418
        variables:
          - booleanVariable:
              name: Task.IsBankAccountAvailable
              initialValue:
                noValue: true
              isInput: false
              isOutput: false
        actions:
          - callData:
              name: Call Data Action
              timeout:
                lit:
                  minutes: 1
              category:
                Salesforce Data Actions-SKRA:
                  dataAction:
                    IAS-Banking-IsBankAccountAvailableForCustomer:
                      inputs:
                        CustomerBackEndID:
                          exp: Flow.CustomerBackEndID
                      successOutputs:
                        IsBankAccountAvailable:
                          var: Task.IsBankAccountAvailable
                      failureOutputs:
                        errorCode:
                          noValue: true
                        status:
                          noValue: true
                        correlationId:
                          noValue: true
                        entityId:
                          noValue: true
                        entityName:
                          noValue: true
                        userMessage:
                          noValue: true
                        userParamsMessage:
                          noValue: true
                        userParams.key:
                          noValue: true
                        userParams.value:
                          noValue: true
                        details.errorCode:
                          noValue: true
                        details.fieldName:
                          noValue: true
                        details.entityId:
                          noValue: true
                        details.entityName:
                          noValue: true
              outputs:
                success:
                  actions:
                    - decision:
                        name: Decision
                        condition:
                          exp: Task.IsBankAccountAvailable
                        outputs:
                          "yes":
                            actions:
                              - endTask:
                                  name: End Task
                                  outputPath:
                                    name: default
                          "no":
                            actions:
                              - endTask:
                                  name: End Task
                                  outputPath:
                                    name: No-Customer Dont have bank acc
                failure:
                  actions:
                    - communicate:
                        name: Communicate
                        communication:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're currently facing some failure technical issues in API8. Please reach us again after some time.\")))"
                timeout:
                  actions:
                    - communicate:
                        name: Communicate
                        communication:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're currently facing some timeout technical issues in API8. Please reach us again after some time.\")))"
          - disconnect:
              name: Disconnect
        outputPaths:
          - outputPath:
              name: No-Customer Dont have bank acc
    - task:
        name: BNKAPI5-CheckBankAccBalBasedOnBankAccNum
        refId: BNKAPI5-CheckBankAccBalBasedOnBankAccNum_434
        variables:
          - booleanVariable:
              name: Task.IsAccNumberValid_API9
              initialValue:
                noValue: true
              isInput: false
              isOutput: false
          - booleanVariable:
              name: Task.IsPINValid_API9
              initialValue:
                noValue: true
              isInput: false
              isOutput: false
        actions:
          - askForSlot:
              name: Ask for Slot
              slot:
                name: BankAccountNumber_API9
              question:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please enter your Bank Account Number?📥\\n\")))"
              customValidation:
                noValue: true
              confirmationMode:
                lit: never
              noMatch:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please enter Valid Bank Account Number?📥\\n_Ex Format : CUST-XXXX_\")))"
              outputs:
                maxNoInputs:
                  enabled: false
          - askForSlot:
              name: Ask for Slot
              slot:
                name: AccountPIN_API9
              question:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please enter PIN associated with your given Bank account number?🔐\")))"
              customValidation:
                noValue: true
              confirmationMode:
                lit: never
              noMatch:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please enter valid pin🔐\\n_Ex: Format : XXXX_\")))"
              outputs:
                maxNoInputs:
                  enabled: false
          - updateData:
              name: Update Data
              statements:
                - string:
                    variable: Flow.BankAccountNumber_API9
                    value:
                      exp: Slot.BankAccountNumber_API9
                - string:
                    variable: Flow.BankAccountPIN_API9
                    value:
                      exp: Slot.AccountPIN_API9
          - clearSlot:
              name: Clear Slot
              slots:
                - slot:
                    name: BankAccountNumber_API9
                - slot:
                    name: AccountPIN_API9
          - callData:
              name: Call Data Action
              timeout:
                lit:
                  minutes: 1
              category:
                Salesforce Data Actions-SKRA:
                  dataAction:
                    IAS-Banking-GetBankAccountBalanceBasedOnAccountNumberV2:
                      inputs:
                        AccountNumber:
                          exp: Flow.BankAccountNumber_API9
                        PIN:
                          exp: Flow.BankAccountPIN_API9
                      successOutputs:
                        IsAccountNumberValid:
                          var: Task.IsAccNumberValid_API9
                        IsPINValid:
                          var: Task.IsPINValid_API9
                        Balance:
                          var: Flow.Balance_API9
                        Message:
                          noValue: true
                        ContactId:
                          var: Flow.ContactID_BNKAPI5OP
                      failureOutputs:
                        errorCode:
                          noValue: true
                        status:
                          noValue: true
                        correlationId:
                          noValue: true
                        entityId:
                          noValue: true
                        entityName:
                          noValue: true
                        userMessage:
                          noValue: true
                        userParamsMessage:
                          noValue: true
                        userParams.key:
                          noValue: true
                        userParams.value:
                          noValue: true
                        details.errorCode:
                          noValue: true
                        details.fieldName:
                          noValue: true
                        details.entityId:
                          noValue: true
                        details.entityName:
                          noValue: true
              outputs:
                success:
                  actions:
                    - switch:
                        name: Switch
                        evaluate:
                          firstTrue:
                            default:
                              actions:
                                - endTask:
                                    name: End Task
                                    outputPath:
                                      name: Account Number Invalid
                            cases:
                              - case:
                                  value:
                                    exp: Task.IsAccNumberValid_API9 and Task.IsPINValid_API9
                                  actions:
                                    - endTask:
                                        name: End Task
                                        outputPath:
                                          name: default
                              - case:
                                  value:
                                    exp: Task.IsAccNumberValid_API9==ToBool(true) and Task.IsPINValid_API9==ToBool(false)
                                  actions:
                                    - endTask:
                                        name: End Task
                                        outputPath:
                                          name: ATM pin Invalid
                failure:
                  actions:
                    - communicate:
                        name: Communicate
                        communication:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're currently facing some technical failure🔧 issues in BNKAPI5.\")))"
                timeout:
                  actions:
                    - communicate:
                        name: Communicate
                        communication:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're currently facing some technical timeout ⏲ issues in BNKAPI5.\")))"
          - jumpToTask:
              name: Jump to Reusable Task
              targetTaskRef: "/digitalBot/tasks/task[General- Disconnect_947]"
        outputPaths:
          - outputPath:
              name: ATM pin Invalid
          - outputPath:
              name: Account Number Invalid
    - task:
        name: BNKAPI6-Create a Bank Transaction
        refId: BNKAPI6-Create a Bank Transaction_481
        variables:
          - booleanVariable:
              name: Task.IsTransactionCreated_API10_OP
              initialValue:
                noValue: true
              isInput: false
              isOutput: false
        actions:
          - callData:
              name: Call Data Action
              timeout:
                lit:
                  minutes: 1
              category:
                Salesforce Data Actions-SKRA:
                  dataAction:
                    IAS-Banking-Create a Valid Record in Transactions Object:
                      inputs:
                        CustomerBackEndID:
                          exp: Flow.CustomerBackEndID
                        TransactionType:
                          exp: Flow.TransactionType_API10
                        SourceBankAccNumber:
                          exp: Flow.SourceBankAccountNumber_API10
                        DestinationBankAccNumber:
                          exp: Flow.DestinationBankAccountNumber_API10
                        TransactionAmount:
                          exp: Flow.TransactionAmount_API10
                        ReasonForTheTransaction:
                          exp: Flow.ReasonForTheTransaction_API10
                      successOutputs:
                        IsTransactionCreated:
                          var: Task.IsTransactionCreated_API10_OP
                        TransactionId:
                          var: Flow.TransactionID_API10_OP
                        Message:
                          var: Flow.Message_API10_OP
                      failureOutputs:
                        errorCode:
                          noValue: true
                        status:
                          noValue: true
                        correlationId:
                          noValue: true
                        entityId:
                          noValue: true
                        entityName:
                          noValue: true
                        userMessage:
                          noValue: true
                        userParamsMessage:
                          noValue: true
                        userParams.key:
                          noValue: true
                        userParams.value:
                          noValue: true
                        details.errorCode:
                          noValue: true
                        details.fieldName:
                          noValue: true
                        details.entityId:
                          noValue: true
                        details.entityName:
                          noValue: true
              outputs:
                success:
                  actions:
                    - decision:
                        name: Decision
                        condition:
                          exp: Task.IsTransactionCreated_API10_OP
                        outputs:
                          "yes":
                            actions:
                              - endTask:
                                  name: End Task
                                  outputPath:
                                    name: default
                          "no":
                            actions:
                              - endTask:
                                  name: End Task
                                  outputPath:
                                    name: Unable to Create Transaction
                failure:
                  actions:
                    - communicate:
                        name: Communicate
                        communication:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're currently facing some technical failure🔧 issues in BNKAPI6.\")))"
                timeout:
                  actions:
                    - communicate:
                        name: Communicate
                        communication:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're currently facing some technical timeout ⏲ issues in BNKAPI6.\")))"
          - jumpToTask:
              name: Jump to Reusable Task
              targetTaskRef: "/digitalBot/tasks/task[General- Disconnect_947]"
        outputPaths:
          - outputPath:
              name: Unable to Create Transaction
    - task:
        name: BNKAPI7-Validate Bank Account PIN
        refId: BNKAPI7-Validate Bank Account PIN_502
        variables:
          - booleanVariable:
              name: Task.IsValidPIN
              initialValue:
                noValue: true
              isInput: false
              isOutput: false
        actions:
          - callData:
              name: Call Data Action
              timeout:
                lit:
                  minutes: 1
              category:
                Salesforce Data Actions-SKRA:
                  dataAction:
                    IAS-Banking-ValidatePIN:
                      inputs:
                        BankAccountNumber:
                          exp: Flow.SourceBankAccountNumber_API10
                        PIN:
                          exp: Flow.PIN_API11
                      successOutputs:
                        ValidPIN:
                          var: Task.IsValidPIN
                        Message:
                          noValue: true
                      failureOutputs:
                        errorCode:
                          noValue: true
                        status:
                          noValue: true
                        correlationId:
                          noValue: true
                        entityId:
                          noValue: true
                        entityName:
                          noValue: true
                        userMessage:
                          noValue: true
                        userParamsMessage:
                          noValue: true
                        userParams.key:
                          noValue: true
                        userParams.value:
                          noValue: true
                        details.errorCode:
                          noValue: true
                        details.fieldName:
                          noValue: true
                        details.entityId:
                          noValue: true
                        details.entityName:
                          noValue: true
              outputs:
                success:
                  actions:
                    - decision:
                        name: Decision
                        condition:
                          exp: Task.IsValidPIN
                        outputs:
                          "yes":
                            actions:
                              - endTask:
                                  name: End Task
                                  outputPath:
                                    name: default
                          "no":
                            actions:
                              - endTask:
                                  name: End Task
                                  outputPath:
                                    name: Invalid PIN
                failure:
                  actions:
                    - communicate:
                        name: Communicate
                        communication:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're currently facing some technical failure🔧 issues in BNKAPI7.\")))"
                timeout:
                  actions:
                    - communicate:
                        name: Communicate
                        communication:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're currently facing some technical timeout ⏲ issues in BNKAPI7.\")))"
          - jumpToTask:
              name: Jump to Reusable Task
              targetTaskRef: "/digitalBot/tasks/task[General- Disconnect_947]"
        outputPaths:
          - outputPath:
              name: Invalid PIN
    - task:
        name: BNKAPI8-Process Transaction
        refId: BNKAPI8-Process Transaction_506
        variables:
          - booleanVariable:
              name: Task.IsTransactionSuccess
              initialValue:
                noValue: true
              isInput: false
              isOutput: false
        actions:
          - communicate:
              name: Communicate
              communication:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"One moment, processing your transaction now. 💸🕒\")))"
          - callData:
              name: Call Data Action
              timeout:
                lit:
                  minutes: 1
              category:
                Salesforce Data Actions-SKRA:
                  dataAction:
                    IAS-Complete Transaction Based on TransactionBackEndID:
                      inputs:
                        TransactionBackEndID:
                          exp: Flow.TransactionID_API10_OP
                      successOutputs:
                        TransactionSuccess:
                          var: Task.IsTransactionSuccess
                        message:
                          noValue: true
                      failureOutputs:
                        errorCode:
                          noValue: true
                        status:
                          noValue: true
                        correlationId:
                          noValue: true
                        entityId:
                          noValue: true
                        entityName:
                          noValue: true
                        userMessage:
                          noValue: true
                        userParamsMessage:
                          noValue: true
                        userParams.key:
                          noValue: true
                        userParams.value:
                          noValue: true
                        details.errorCode:
                          noValue: true
                        details.fieldName:
                          noValue: true
                        details.entityId:
                          noValue: true
                        details.entityName:
                          noValue: true
              outputs:
                success:
                  actions:
                    - decision:
                        name: Decision
                        condition:
                          exp: Task.IsTransactionSuccess
                        outputs:
                          "yes":
                            actions:
                              - endTask:
                                  name: End Task
                                  outputPath:
                                    name: default
                          "no":
                            actions:
                              - endTask:
                                  name: End Task
                                  outputPath:
                                    name: Unable to complete Transaction
                failure:
                  actions:
                    - communicate:
                        name: Communicate
                        communication:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're currently facing some technical failure🔧 issues in BNKAPI8.\")))"
                timeout:
                  actions:
                    - communicate:
                        name: Communicate
                        communication:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're currently facing some technical timeout ⏲ issues in BNKAPI8.\")))"
          - jumpToTask:
              name: Jump to Reusable Task
              targetTaskRef: "/digitalBot/tasks/task[General- Disconnect_947]"
        outputPaths:
          - outputPath:
              name: Unable to complete Transaction
    - task:
        name: BNKAPI9-GetBankAccUsingBankAccNumAndBankAccPIN
        refId: BNKAPI9-GetBankAccUsingBankAccNumAndBankAccPIN_818
        variables:
          - booleanVariable:
              name: Task.IsRowFound
              initialValue:
                noValue: true
              isInput: false
              isOutput: false
        actions:
          - callData:
              name: Call Data Action
              timeout:
                lit:
                  minutes: 1
              category:
                Salesforce Data Actions-SKRA:
                  dataAction:
                    IAS-Banking-GetBackAccountUsingAccNumber:
                      inputs:
                        BankAccountNumber:
                          exp: Flow.BankAccountNumber_API14INP
                        PIN:
                          exp: Flow.PIN_API14INP
                      successOutputs:
                        IsRowFound:
                          var: Task.IsRowFound
                        Message:
                          var: Flow.Message_API14OP
                        TypeOfBankAccount:
                          var: Flow.TypeOfBankAccount_API14OP
                        AccountNumber:
                          var: Flow.AccountNumber_API14OP
                        BankAccountName:
                          var: Flow.BankAccountName_API14OP
                        Balance:
                          var: Flow.Balance_API14OP
                        Contact:
                          var: Flow.Contact_API14OP
                        BankAccountId:
                          var: Flow.BankAccountBackEndID_API14OP
                      failureOutputs:
                        errorCode:
                          noValue: true
                        status:
                          noValue: true
                        correlationId:
                          noValue: true
                        entityId:
                          noValue: true
                        entityName:
                          noValue: true
                        userMessage:
                          noValue: true
                        userParamsMessage:
                          noValue: true
                        userParams.key:
                          noValue: true
                        userParams.value:
                          noValue: true
                        details.errorCode:
                          noValue: true
                        details.fieldName:
                          noValue: true
                        details.entityId:
                          noValue: true
                        details.entityName:
                          noValue: true
              outputs:
                success:
                  actions:
                    - decision:
                        name: Decision
                        condition:
                          exp: Task.IsRowFound
                        outputs:
                          "yes":
                            actions:
                              - endTask:
                                  name: End Task
                                  outputPath:
                                    name: default
                          "no":
                            actions:
                              - endTask:
                                  name: End Task
                                  outputPath:
                                    name: Unable to Get Bank Acc Info
                failure:
                  actions:
                    - communicate:
                        name: Communicate
                        communication:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're currently facing some technical failure🔧 issues in API14.\")))"
                timeout:
                  actions:
                    - communicate:
                        name: Communicate
                        communication:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're currently facing some technical timeout ⏲ issues in API14.\")))"
          - communicate:
              name: Communicate
              communication:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"👋 We're disconnecting the current interaction now.Have a great day!\")))"
          - disconnect:
              name: Disconnect
        outputPaths:
          - outputPath:
              name: Unable to Get Bank Acc Info
    - task:
        name: CASE-Add Comment to Case
        refId: CASE-Add Comment to Case_1130
        actions:
          - askForSlot:
              name: Ask for Slot
              slot:
                name: CaseNumber
              question:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please provide the Case Number that you want to add comment?💬\")))"
              customValidation:
                noValue: true
              confirmationMode:
                lit: never
              noMatch:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please provide Valid Case Number?\\n_8 Digits_\")))"
              outputs:
                maxNoInputs:
                  enabled: false
          - askForSlot:
              name: Ask for Slot
              slot:
                name: Paragraph
              question:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please provide your comment for the case💬 \")))"
              customValidation:
                noValue: true
              confirmationMode:
                lit: never
              noMatch:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please provide valid comment for the case💬 \")))"
              outputs:
                maxNoInputs:
                  enabled: false
          - updateData:
              name: Update Data
              statements:
                - string:
                    variable: Flow.CaseNumber_CASEAPI3INP
                    value:
                      exp: Slot.CaseNumber
                - string:
                    variable: Flow.CaseComment_CASEAPI3INP
                    value:
                      exp: Slot.Paragraph
          - clearSlot:
              name: Clear Slot
              slots:
                - slot:
                    name: Paragraph
                - slot:
                    name: CaseNumber
          - callTask:
              name: Call Task
              targetTaskRef: "/digitalBot/tasks/task[CASEAPI3-Add Comment to Case_1131]"
              outputs:
                default:
                  actions:
                    - communicate:
                        name: Communicate
                        communication:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Your comment has been successfully added to the case!✅\")))"
                paths:
                  - path:
                      name: Failed to Add Comment
                      actions:
                        - communicate:
                            name: Communicate
                            communication:
                              exp: "MakeCommunication(\n  ToCommunication(MakeCommunication(\"Unable to add your comment at this time.❌ \\n\", Flow.Message_CASEAPI3OP)))"
          - jumpToTask:
              name: Jump to Reusable Task
              targetTaskRef: "/digitalBot/tasks/task[General-Return To The Main Menu_946]"
    - task:
        name: CASE-Bank Account Closure
        refId: CASE-Bank Account Closure_1002
        actions:
          - askForSlot:
              name: Ask for Slot
              slot:
                name: SourceBankAccountNumber
              question:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please enter your bank account number:🏦\")))"
              customValidation:
                noValue: true
              confirmationMode:
                lit: never
              noMatch:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please enter valid bank account number?🏛️\")))"
              outputs:
                maxNoInputs:
                  enabled: false
          - askForSlot:
              name: Ask for Slot
              slot:
                name: Paragraph
              question:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"What is the subject of your request?📝 \\n_(e.g., Bank Account Closure)_\")))"
              customValidation:
                noValue: true
              confirmationMode:
                lit: never
              noMatch:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please enter valid subject of your request?📝 \\n_(e.g., Bank Account Closure)_\")))"
              outputs:
                maxNoInputs:
                  enabled: false
          - askForSlot:
              name: Ask for Slot
              slot:
                name: TransactionReason
              question:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please provide a brief reason for closing your bank account❓\")))"
              customValidation:
                noValue: true
              confirmationMode:
                lit: never
              noMatch:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please provide a valid brief reason for closing tour bank account number❓\")))"
              outputs:
                maxNoInputs:
                  enabled: false
          - askForSlot:
              name: Ask for Slot
              slot:
                name: Priority
              question:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"How urgent is this request?🔺 \")))"
              customValidation:
                noValue: true
              confirmationMode:
                lit: never
              chooser:
                lit:
                  presentation:
                    lit: quickReplies
                  carousel:
                    lit:
                      cards:
                        lit: []
                  quickReplies:
                    lit:
                      buttons:
                        lit:
                          - lit:
                              label:
                                noValue: true
                              value:
                                lit: Low
                              type:
                                lit: postback
                          - lit:
                              label:
                                noValue: true
                              value:
                                lit: Medium
                              type:
                                lit: postback
                          - lit:
                              label:
                                noValue: true
                              value:
                                lit: High
                              type:
                                lit: postback
              noMatch:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please select only from the given options.🔺 \")))"
              outputs:
                maxNoInputs:
                  enabled: false
          - updateData:
              name: Update Data
              statements:
                - string:
                    variable: Flow.BankAccNum_CASEAPI1INP
                    value:
                      exp: Slot.SourceBankAccountNumber
                - string:
                    variable: Flow.CaseType_CASEAPI1INP
                    value:
                      exp: "\"Bank Account Closure\""
                - string:
                    variable: Flow.Subject_CASEAPI1INP
                    value:
                      exp: Slot.Paragraph
                - string:
                    variable: Flow.Description_CASEAPI1INP
                    value:
                      exp: Slot.TransactionReason
                - string:
                    variable: Flow.Origin_CASEAPI1INP
                    value:
                      exp: "\"Phone\""
                - string:
                    variable: Flow.Priority_CASEAPI1INP
                    value:
                      exp: Slot.Priority
                - string:
                    variable: Flow.InsPolicyNum_CASEAPI1INP
                    value:
                      exp: "\" \""
          - clearSlot:
              name: Clear Slot
              slots:
                - slot:
                    name: SourceBankAccountNumber
                - slot:
                    name: Paragraph
                - slot:
                    name: TransactionReason
                - slot:
                    name: Priority
          - callTask:
              name: Call Task
              targetTaskRef: "/digitalBot/tasks/task[ACCAPI5-Validate Master PIN_720]"
              outputs:
                default:
                  actions:
                    - callTask:
                        name: Call Task
                        targetTaskRef: "/digitalBot/tasks/task[CASEAPI1-Create a Case_1004]"
                        outputs:
                          default:
                            actions:
                              - communicate:
                                  name: Communicate
                                  communication:
                                    exp: "MakeCommunication(\n  ToCommunication(MakeCommunication(\"✅ Your request to close your bank account \", flow.BankAccNum_CASEAPI1INP, \" has been successfully created.\\n📋 *Case Number:* \", Flow.CaseNumber_CASEAPI1OP, \"\\nOur team will review your request and get back to you shortly.\")))"
                          paths:
                            - path:
                                name: Unable to Create Case
                                actions:
                                  - communicate:
                                      name: Communicate
                                      communication:
                                        exp: "MakeCommunication(\n  ToCommunication(MakeCommunication(\"⚠️ We're unable to create a case due to the following reason:\\n\", Flow.Message_CASEAPI1OP)))"
                paths:
                  - path:
                      name: Invalid PIN
                      actions:
                        - communicate:
                            name: Communicate
                            communication:
                              exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"🚫 Your verification was unsuccessful. Please review your information and try again.\")))"
          - jumpToTask:
              name: Jump to Reusable Task
              targetTaskRef: "/digitalBot/tasks/task[General-Return To The Main Menu_946]"
    - task:
        name: CASE-Get Status of Case
        refId: CASE-Get Status of Case_1069
        actions:
          - askForSlot:
              name: Ask for Slot
              slot:
                name: CaseNumber
              question:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please provide your case number?🔢\")))"
              customValidation:
                noValue: true
              confirmationMode:
                lit: never
              noMatch:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please provide valid case number?🔢\")))"
              outputs:
                maxNoInputs:
                  enabled: false
          - updateData:
              name: Update Data
              statements:
                - string:
                    variable: Flow.CaseNumber_CASEAPI2INP
                    value:
                      exp: Slot.CaseNumber
          - clearSlot:
              name: Clear Slot
              slots:
                - slot:
                    name: CaseNumber
          - callTask:
              name: Call Task
              targetTaskRef: "/digitalBot/tasks/task[ACCAPI5-Validate Master PIN_720]"
              outputs:
                default:
                  actions:
                    - callTask:
                        name: Call Task
                        targetTaskRef: "/digitalBot/tasks/task[CASEAPI2-Get Status of Case_1071]"
                        outputs:
                          default:
                            actions:
                              - communicate:
                                  name: Communicate
                                  communication:
                                    exp: "MakeCommunication(\n  ToCommunication(MakeCommunication(\"📄 *Case Status Update:*\\n🔢 *Case Number:* \", Flow.CaseNumber_CASEAPI2INP, \"\\n📊 *Current Status:* \", Flow.CaseCurrentStatus_CASEAPI2OP, \"\\n🗨️ *Latest Comment:* \", Flow.CaseLatestComment_CASEAPI2OP)))"
                          paths:
                            - path:
                                name: Unable to Get Case Status
                                actions:
                                  - communicate:
                                      name: Communicate
                                      communication:
                                        exp: "MakeCommunication(\n  ToCommunication(MakeCommunication(\"📣 We're sorry, but we're unable to retrieve the status of your case at the moment. Please try again later.\\nReason Could be \", Flow.Message_CASEAPI2OP)))"
                paths:
                  - path:
                      name: Invalid PIN
                      actions:
                        - communicate:
                            name: Communicate
                            communication:
                              exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"🚫 Your verification was unsuccessful. Please review your information and try again.\")))"
          - jumpToTask:
              name: Jump to Reusable Task
              targetTaskRef: "/digitalBot/tasks/task[General-Return To The Main Menu_946]"
    - task:
        name: CASE-Insurance Policy Closure
        refId: CASE-Insurance Policy Closure_1003
        actions:
          - askForSlot:
              name: Ask for Slot
              slot:
                name: PolicyNumber
              question:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please enter your Insurance Policy Number?🛡️\")))"
              customValidation:
                noValue: true
              confirmationMode:
                lit: never
              noMatch:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please enter valid Policy number?🛡️\\n_Format: POLICY-XXXX_\")))"
              outputs:
                maxNoInputs:
                  enabled: false
          - updateData:
              name: Update Data
              statements:
                - string:
                    variable: Flow.PolicyNumber_INSAPI3INP
                    value:
                      exp: Slot.PolicyNumber
                - string:
                    variable: Flow.InsPolicyNum_CASEAPI1INP
                    value:
                      exp: Slot.PolicyNumber
          - callTask:
              name: Call Task
              targetTaskRef: "/digitalBot/tasks/task[INSAPI3-View Policy Details_703]"
              outputs:
                default:
                  actions:
                    - decision:
                        name: Decision
                        condition:
                          exp: If(Flow.Status_INSAPI3OP=="Active",true,false)
                        outputs:
                          "yes":
                            actions:
                              - askForSlot:
                                  name: Ask for Slot
                                  slot:
                                    name: Paragraph
                                  question:
                                    exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"What is the subject of your request?📝 \\n_(e.g., Insurance Policy Closure)_\")))"
                                  customValidation:
                                    noValue: true
                                  confirmationMode:
                                    lit: never
                                  noMatch:
                                    exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please enter valid subject of your request?📝 \\n_(e.g., Bank Account Closure)_\")))"
                                  outputs:
                                    maxNoInputs:
                                      enabled: false
                              - askForSlot:
                                  name: Ask for Slot
                                  slot:
                                    name: TransactionReason
                                  question:
                                    exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please provide a brief reason for closing your Active Insurance Policy❓\")))"
                                  customValidation:
                                    noValue: true
                                  confirmationMode:
                                    lit: never
                                  noMatch:
                                    exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please provide a valid brief reason for closing tour bank account number❓\")))"
                                  outputs:
                                    maxNoInputs:
                                      enabled: false
                              - askForSlot:
                                  name: Ask for Slot
                                  slot:
                                    name: Priority
                                  question:
                                    exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"How urgent is this request?🔺 \")))"
                                  customValidation:
                                    noValue: true
                                  confirmationMode:
                                    lit: never
                                  chooser:
                                    lit:
                                      presentation:
                                        lit: quickReplies
                                      carousel:
                                        lit:
                                          cards:
                                            lit: []
                                      quickReplies:
                                        lit:
                                          buttons:
                                            lit:
                                              - lit:
                                                  label:
                                                    noValue: true
                                                  value:
                                                    lit: Low
                                                  type:
                                                    lit: postback
                                              - lit:
                                                  label:
                                                    noValue: true
                                                  value:
                                                    lit: Medium
                                                  type:
                                                    lit: postback
                                              - lit:
                                                  label:
                                                    noValue: true
                                                  value:
                                                    lit: High
                                                  type:
                                                    lit: postback
                                  noMatch:
                                    exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please select only from the given options.🔺 \")))"
                                  outputs:
                                    maxNoInputs:
                                      enabled: false
                              - updateData:
                                  name: Update Data
                                  statements:
                                    - string:
                                        variable: Flow.BankAccNum_CASEAPI1INP
                                        value:
                                          exp: "\" \""
                                    - string:
                                        variable: Flow.CaseType_CASEAPI1INP
                                        value:
                                          exp: "\"Insurance Policy Closure\""
                                    - string:
                                        variable: Flow.Subject_CASEAPI1INP
                                        value:
                                          exp: Slot.Paragraph
                                    - string:
                                        variable: Flow.Description_CASEAPI1INP
                                        value:
                                          exp: Slot.TransactionReason
                                    - string:
                                        variable: Flow.Origin_CASEAPI1INP
                                        value:
                                          exp: "\"Phone\""
                                    - string:
                                        variable: Flow.Priority_CASEAPI1INP
                                        value:
                                          exp: Slot.Priority
                              - clearSlot:
                                  name: Clear Slot
                                  slots:
                                    - slot:
                                        name: Paragraph
                                    - slot:
                                        name: TransactionReason
                                    - slot:
                                        name: Priority
                                    - slot:
                                        name: PolicyNumber
                          "no":
                            actions:
                              - communicate:
                                  name: Communicate
                                  communication:
                                    exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Your insurance policy is not active and cannot be closed.⚠️ \")))"
                              - jumpToTask:
                                  name: Jump to Reusable Task
                                  targetTaskRef: "/digitalBot/tasks/task[General-Return To The Main Menu_946]"
                paths:
                  - path:
                      name: Unable to retrieve policy details
                      actions:
                        - communicate:
                            name: Communicate
                            communication:
                              exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"🔍 We couldn't locate your policy details at the moment.\\nPossible reasons could be Invalid Policy Number❌\")))"
                        - jumpToTask:
                            name: Jump to Reusable Task
                            targetTaskRef: "/digitalBot/tasks/task[General-Return To The Main Menu_946]"
          - callTask:
              name: Call Task
              targetTaskRef: "/digitalBot/tasks/task[ACCAPI5-Validate Master PIN_720]"
              outputs:
                default:
                  actions:
                    - callTask:
                        name: Call Task
                        targetTaskRef: "/digitalBot/tasks/task[CASEAPI1-Create a Case_1004]"
                        outputs:
                          default:
                            actions:
                              - communicate:
                                  name: Communicate
                                  communication:
                                    exp: "MakeCommunication(\n  ToCommunication(MakeCommunication(\"✅ Your request to close your Active Insurance Policy \", Flow.InsPolicyNum_CASEAPI1INP, \" has been successfully created.\\n📋 *Case Number:* \", Flow.CaseNumber_CASEAPI1OP, \"\\nOur team will review your request and get back to you shortly.\")))"
                          paths:
                            - path:
                                name: Unable to Create Case
                                actions:
                                  - communicate:
                                      name: Communicate
                                      communication:
                                        exp: "MakeCommunication(\n  ToCommunication(MakeCommunication(\"⚠️ We're unable to create a case due to the following reason:\\n\", Flow.Message_CASEAPI1OP)))"
                paths:
                  - path:
                      name: Invalid PIN
                      actions:
                        - communicate:
                            name: Communicate
                            communication:
                              exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"🚫 Your verification was unsuccessful. Please review your information and try again.\")))"
          - jumpToTask:
              name: Jump to Reusable Task
              targetTaskRef: "/digitalBot/tasks/task[General-Return To The Main Menu_946]"
    - task:
        name: CASE-Raise a Common Case
        refId: CASE-Raise a Common Case_1053
        actions:
          - communicate:
              name: Communicate
              communication:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please share the following details of your issue, and I'll raise a case for you.🆘\")))"
          - askForSlot:
              name: Ask for Slot
              slot:
                name: TransactionReason
              question:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Can you provide a short subject line for this case?🙂\")))"
              customValidation:
                noValue: true
              confirmationMode:
                lit: never
              noMatch:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Can you provide a valid short subject line for this case?🙂\")))"
              outputs:
                maxNoInputs:
                  enabled: false
          - askForSlot:
              name: Ask for Slot
              slot:
                name: Paragraph
              question:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Could you please provide a brief description of your issue?📝 \")))"
              customValidation:
                noValue: true
              confirmationMode:
                lit: never
              noMatch:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Could you please provide a valid brief description of your issue?📝 \")))"
              outputs:
                maxNoInputs:
                  enabled: false
          - askForSlot:
              name: Ask for Slot
              slot:
                name: Priority
              question:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"How urgent is this request?🔺 \")))"
              customValidation:
                noValue: true
              confirmationMode:
                lit: never
              chooser:
                lit:
                  presentation:
                    lit: quickReplies
                  carousel:
                    lit:
                      cards:
                        lit: []
                  quickReplies:
                    lit:
                      buttons:
                        lit:
                          - lit:
                              label:
                                noValue: true
                              value:
                                lit: Low
                              type:
                                lit: postback
                          - lit:
                              label:
                                noValue: true
                              value:
                                lit: Medium
                              type:
                                lit: postback
                          - lit:
                              label:
                                noValue: true
                              value:
                                lit: High
                              type:
                                lit: postback
              noMatch:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please select only from the provided options.\")))"
              outputs:
                maxNoInputs:
                  enabled: false
          - updateData:
              name: Update Data
              statements:
                - string:
                    variable: Flow.BankAccNum_CASEAPI1INP
                    value:
                      exp: "\" \""
                - string:
                    variable: Flow.InsPolicyNum_CASEAPI1INP
                    value:
                      exp: "\" \""
                - string:
                    variable: Flow.CaseType_CASEAPI1INP
                    value:
                      exp: "\"Other\""
                - string:
                    variable: Flow.Subject_CASEAPI1INP
                    value:
                      exp: Slot.TransactionReason
                - string:
                    variable: Flow.Description_CASEAPI1INP
                    value:
                      exp: Slot.Paragraph
                - string:
                    variable: Flow.Origin_CASEAPI1INP
                    value:
                      exp: "\"Phone\""
                - string:
                    variable: Flow.Priority_CASEAPI1INP
                    value:
                      exp: Slot.Priority
          - clearSlot:
              name: Clear Slot
              slots:
                - slot:
                    name: TransactionReason
                - slot:
                    name: Paragraph
                - slot:
                    name: Priority
          - callTask:
              name: Call Task
              targetTaskRef: "/digitalBot/tasks/task[ACCAPI5-Validate Master PIN_720]"
              outputs:
                default:
                  actions:
                    - callTask:
                        name: Call Task
                        targetTaskRef: "/digitalBot/tasks/task[CASEAPI1-Create a Case_1004]"
                        outputs:
                          default:
                            actions:
                              - communicate:
                                  name: Communicate
                                  communication:
                                    exp: "MakeCommunication(\n  ToCommunication(MakeCommunication(\"✅Case has been successfully raised with the subject line *\", Flow.Subject_CASEAPI1INP, \"* Our team will review it shortly.\\n📋 *Case Number:* \", Flow.CaseNumber_CASEAPI1OP, \"\\nOur team will review your request and get back to you shortly.\")))"
                          paths:
                            - path:
                                name: Unable to Create Case
                                actions:
                                  - communicate:
                                      name: Communicate
                                      communication:
                                        exp: "MakeCommunication(\n  ToCommunication(MakeCommunication(\"⚠️ We're unable to create a case due to the following reason:\\n\", Flow.Message_CASEAPI1OP)))"
                paths:
                  - path:
                      name: Invalid PIN
                      actions:
                        - communicate:
                            name: Communicate
                            communication:
                              exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"🚫 Your verification was unsuccessful. Please review your information and try again.\")))"
          - jumpToTask:
              name: Jump to Reusable Task
              targetTaskRef: "/digitalBot/tasks/task[General-Return To The Main Menu_946]"
    - task:
        name: CASEAPI1-Create a Case
        refId: CASEAPI1-Create a Case_1004
        variables:
          - booleanVariable:
              name: Task.IsCaseCreated
              initialValue:
                noValue: true
              isInput: false
              isOutput: false
        actions:
          - callData:
              name: Call Data Action
              timeout:
                lit:
                  minutes: 1
              category:
                Salesforce Data Actions-SKRA:
                  dataAction:
                    IAS-Case-Create Case:
                      inputs:
                        CustomerBackEndID:
                          exp: Flow.CustomerBackEndID
                        BankAccountNumber:
                          exp: Flow.BankAccNum_CASEAPI1INP
                        InsuncePolicyNumber:
                          exp: Flow.InsPolicyNum_CASEAPI1INP
                        CaseType:
                          exp: Flow.CaseType_CASEAPI1INP
                        Subject:
                          exp: Flow.Subject_CASEAPI1INP
                        Description:
                          exp: Flow.Description_CASEAPI1INP
                        Origin:
                          exp: Flow.Origin_CASEAPI1INP
                        Priority:
                          exp: Flow.Priority_CASEAPI1INP
                      successOutputs:
                        IsCaseCreated:
                          var: Task.IsCaseCreated
                        Message:
                          var: Flow.Message_CASEAPI1OP
                        CaseNumber:
                          var: Flow.CaseNumber_CASEAPI1OP
                      failureOutputs:
                        errorCode:
                          noValue: true
                        status:
                          noValue: true
                        correlationId:
                          noValue: true
                        entityId:
                          noValue: true
                        entityName:
                          noValue: true
                        userMessage:
                          noValue: true
                        userParamsMessage:
                          noValue: true
                        userParams.key:
                          noValue: true
                        userParams.value:
                          noValue: true
                        details.errorCode:
                          noValue: true
                        details.fieldName:
                          noValue: true
                        details.entityId:
                          noValue: true
                        details.entityName:
                          noValue: true
              outputs:
                success:
                  actions:
                    - decision:
                        name: Decision
                        condition:
                          exp: Task.IsCaseCreated
                        outputs:
                          "yes":
                            actions:
                              - endTask:
                                  name: End Task
                                  outputPath:
                                    name: default
                          "no":
                            actions:
                              - endTask:
                                  name: End Task
                                  outputPath:
                                    name: Unable to Create Case
                failure:
                  actions:
                    - communicate:
                        name: Communicate
                        communication:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're currently facing some technical failure🔧 issues in CASEAPI1.\")))"
                timeout:
                  actions:
                    - communicate:
                        name: Communicate
                        communication:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're currently facing some technical timeout ⏲ issues in CASEAPI1.\")))"
          - jumpToTask:
              name: Jump to Reusable Task
              targetTaskRef: "/digitalBot/tasks/task[General- Disconnect_947]"
        outputPaths:
          - outputPath:
              name: Unable to Create Case
    - task:
        name: CASEAPI2-Get Status of Case
        refId: CASEAPI2-Get Status of Case_1071
        variables:
          - booleanVariable:
              name: Task.IsCaseFound
              initialValue:
                noValue: true
              isInput: false
              isOutput: false
        actions:
          - callData:
              name: Call Data Action
              timeout:
                lit:
                  minutes: 1
              category:
                Salesforce Data Actions-SKRA:
                  dataAction:
                    IAS-Case-Get the Status and Latest Comment on my Case:
                      inputs:
                        CaseNumber:
                          exp: Flow.CaseNumber_CASEAPI2INP
                      successOutputs:
                        IsCaseFound:
                          var: Task.IsCaseFound
                        CaseSuject:
                          var: Flow.CaseSubject_CASEAPI2OP
                        CaseCurrentStatus:
                          var: Flow.CaseCurrentStatus_CASEAPI2OP
                        LatestComment:
                          var: Flow.CaseLatestComment_CASEAPI2OP
                        Message:
                          var: Flow.Message_CASEAPI2OP
                      failureOutputs:
                        errorCode:
                          noValue: true
                        status:
                          noValue: true
                        correlationId:
                          noValue: true
                        entityId:
                          noValue: true
                        entityName:
                          noValue: true
                        userMessage:
                          noValue: true
                        userParamsMessage:
                          noValue: true
                        userParams.key:
                          noValue: true
                        userParams.value:
                          noValue: true
                        details.errorCode:
                          noValue: true
                        details.fieldName:
                          noValue: true
                        details.entityId:
                          noValue: true
                        details.entityName:
                          noValue: true
              outputs:
                success:
                  actions:
                    - decision:
                        name: Decision
                        condition:
                          exp: Task.IsCaseFound
                        outputs:
                          "yes":
                            actions:
                              - endTask:
                                  name: End Task
                                  outputPath:
                                    name: default
                          "no":
                            actions:
                              - endTask:
                                  name: End Task
                                  outputPath:
                                    name: Unable to Get Case Status
                failure:
                  actions:
                    - communicate:
                        name: Communicate
                        communication:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're currently facing some technical failure🔧 issues in CASEAPI2.\")))"
                timeout:
                  actions:
                    - communicate:
                        name: Communicate
                        communication:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're currently facing some technical timeout ⏲ issues in CASEAPI2.\")))"
          - jumpToTask:
              name: Jump to Reusable Task
              targetTaskRef: "/digitalBot/tasks/task[General- Disconnect_947]"
        outputPaths:
          - outputPath:
              name: Unable to Get Case Status
    - task:
        name: CASEAPI3-Add Comment to Case
        refId: CASEAPI3-Add Comment to Case_1131
        variables:
          - booleanVariable:
              name: Task.IsCommentAdded
              initialValue:
                noValue: true
              isInput: false
              isOutput: false
        actions:
          - callData:
              name: Call Data Action
              timeout:
                lit:
                  minutes: 1
              category:
                Salesforce Data Actions-SKRA:
                  dataAction:
                    IAS-CASE-Add Comment By Customer:
                      inputs:
                        CaseNumber:
                          exp: Flow.CaseNumber_CASEAPI3INP
                        CustomerBackEndID:
                          exp: Flow.CustomerBackEndID
                        CommentBody:
                          exp: Flow.CaseComment_CASEAPI3INP
                      successOutputs:
                        IsCommentAdded:
                          var: Task.IsCommentAdded
                        Message:
                          var: Flow.Message_CASEAPI3OP
                      failureOutputs:
                        errorCode:
                          noValue: true
                        status:
                          noValue: true
                        correlationId:
                          noValue: true
                        entityId:
                          noValue: true
                        entityName:
                          noValue: true
                        userMessage:
                          noValue: true
                        userParamsMessage:
                          noValue: true
                        userParams.key:
                          noValue: true
                        userParams.value:
                          noValue: true
                        details.errorCode:
                          noValue: true
                        details.fieldName:
                          noValue: true
                        details.entityId:
                          noValue: true
                        details.entityName:
                          noValue: true
              outputs:
                success:
                  actions:
                    - decision:
                        name: Decision
                        condition:
                          exp: Task.IsCommentAdded
                        outputs:
                          "yes":
                            actions:
                              - endTask:
                                  name: End Task
                                  outputPath:
                                    name: default
                          "no":
                            actions:
                              - endTask:
                                  name: End Task
                                  outputPath:
                                    name: Failed to Add Comment
                failure:
                  actions:
                    - communicate:
                        name: Communicate
                        communication:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're currently facing some technical failure🔧 issues in CASEAPI3.\")))"
                timeout:
                  actions:
                    - communicate:
                        name: Communicate
                        communication:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're currently facing some technical timeout ⏲ issues in CASEAPI3.\")))"
          - jumpToTask:
              name: Jump to Reusable Task
              targetTaskRef: "/digitalBot/tasks/task[General- Disconnect_947]"
        outputPaths:
          - outputPath:
              name: Failed to Add Comment
    - task:
        name: General- Disconnect
        refId: General- Disconnect_947
        actions:
          - communicate:
              name: Communicate
              communication:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're disconnecting the current interaction now. Have a great day!👋\")))"
          - disconnect:
              name: Disconnect
    - task:
        name: General- Exit from Chat
        refId: General- Exit from Chat_276
        actions:
          - askForBoolean:
              name: Ask for Yes / No
              question:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Are you sure! Do you want to exit from the chat.\")))"
              noMatch:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please input \\\"Yes\\\" or \\\"No\\\". Do you want to proceed?\")))"
              outputs:
                "yes":
                  actions:
                    - jumpToTask:
                        name: Jump to Reusable Task
                        targetTaskRef: "/digitalBot/tasks/task[General- Disconnect_947]"
                "no":
                  actions:
                    - jumpToTask:
                        name: Jump to Reusable Task
                        targetTaskRef: "/digitalBot/tasks/task[General-Return To The Main Menu_946]"
                maxNoInputs:
                  enabled: false
    - task:
        name: General-Return To The Main Menu
        refId: General-Return To The Main Menu_946
        actions:
          - communicate:
              name: Communicate
              communication:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Returning to the Main Menu🔄\")))"
          - jumpToTask:
              name: Jump to Reusable Task
              targetTaskRef: "/digitalBot/tasks/task[Main Menu_63]"
    - task:
        name: INS-Insurance Menu
        refId: INS-Insurance Menu_298
        actions:
          - digitalMenu:
              name: Digital Menu
              question:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"What would you like to do?\")))"
              noMatch:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Tell me again what you would like to do.\")))"
              selection:
                noValue: true
              knowledgeSearchResult:
                noValue: true
              chooser:
                lit:
                  presentation:
                    lit: quickReplies
                  carousel:
                    lit:
                      cards:
                        lit: []
                  quickReplies:
                    lit:
                      buttons:
                        lit:
                          - lit:
                              label:
                                noValue: true
                              value:
                                lit: Policy Enrolment📝
                              type:
                                lit: postback
                          - lit:
                              label:
                                noValue: true
                              value:
                                lit: View Policy Details📄
                              type:
                                lit: postback
                          - lit:
                              label:
                                noValue: true
                              value:
                                lit: Activate Offered Policy✨
                              type:
                                lit: postback
                          - lit:
                              label:
                                noValue: true
                              value:
                                lit: Surrender Policy🚫
                              type:
                                lit: postback
                          - lit:
                              label:
                                noValue: true
                              value:
                                lit: Home🏠
                              type:
                                lit: postback
              outputs:
                maxNoInputs:
                  enabled: false
                paths:
                  - path:
                      name: Policy Enrolment📝
                      actions:
                        - jumpToTask:
                            name: Jump to Reusable Task
                            targetTaskRef: "/digitalBot/tasks/task[INS1-Policy Enrolment_619]"
                  - path:
                      name: View Policy Details📄
                      actions:
                        - jumpToTask:
                            name: Jump to Reusable Task
                            targetTaskRef: "/digitalBot/tasks/task[INS1-View Policy Details_620]"
                  - path:
                      name: Activate Offered Policy✨
                      actions:
                        - jumpToTask:
                            name: Jump to Reusable Task
                            targetTaskRef: "/digitalBot/tasks/task[INS1-Activate Offered Policy_621]"
                  - path:
                      name: Surrender Policy🚫
                      actions:
                        - communicate:
                            name: Communicate
                            communication:
                              exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"To close your active insurance policy, please raise a case with the following information🔔 \")))"
                        - jumpToTask:
                            name: Jump to Reusable Task
                            targetTaskRef: "/digitalBot/tasks/task[CASE-Insurance Policy Closure_1003]"
                  - path:
                      name: Home🏠
                      actions:
                        - jumpToTask:
                            name: Jump to Reusable Task
                            targetTaskRef: "/digitalBot/tasks/task[General-Return To The Main Menu_946]"
    - task:
        name: INS1-Activate Offered Policy
        refId: INS1-Activate Offered Policy_621
        variables:
          - stringVariable:
              name: Task.PolicyStatus
              initialValue:
                noValue: true
              isInput: false
              isOutput: false
        actions:
          - askForSlot:
              name: Ask for Slot
              slot:
                name: PolicyNumber
              question:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please enter your Policy number?🔢\")))"
              customValidation:
                noValue: true
              confirmationMode:
                lit: never
              noMatch:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please enter Valid Policy number?🔢\\n_Format should be POLICY-XXXX?_\")))"
              outputs:
                maxNoInputs:
                  enabled: false
          - updateData:
              name: Update Data
              statements:
                - string:
                    variable: Flow.PolicyNumber_INSAPI3INP
                    value:
                      exp: Slot.PolicyNumber
          - clearSlot:
              name: Clear Slot
              slots:
                - slot:
                    name: PolicyNumber
          - callTask:
              name: Call Task
              targetTaskRef: "/digitalBot/tasks/task[INSAPI3-View Policy Details_703]"
              outputs:
                default:
                  actions:
                    - updateData:
                        name: Update Data
                        statements:
                          - string:
                              variable: Task.PolicyStatus
                              value:
                                exp: Flow.Status_INSAPI3OP
                    - decision:
                        name: Decision
                        condition:
                          exp: If(Task.PolicyStatus=="Offered",true,false)
                        outputs:
                          "yes":
                            actions:
                              - updateData:
                                  name: Update Data
                                  statements:
                                    - string:
                                        variable: Flow.PolicyNumber_INSAPI2INP
                                        value:
                                          exp: Flow.PolicyNumber_INSAPI3INP
                              - callTask:
                                  name: Call Task
                                  targetTaskRef: "/digitalBot/tasks/task[ACCAPI5-Validate Master PIN_720]"
                                  outputs:
                                    default:
                                      actions:
                                        - callTask:
                                            name: Call Task
                                            targetTaskRef: "/digitalBot/tasks/task[INSAPI2-Update Policy With Given Status_681]"
                                            outputs:
                                              default:
                                                actions:
                                                  - communicate:
                                                      name: Communicate
                                                      communication:
                                                        exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"✅ Your policy has been successfully activated! 🎉\")))"
                                              paths:
                                                - path:
                                                    name: Unable to Update Status
                                                    actions:
                                                      - communicate:
                                                          name: Communicate
                                                          communication:
                                                            exp: "MakeCommunication(\n  ToCommunication(MakeCommunication(\"😞Unfortunately, we encountered an issue activating your policy.\\nReason could be \", Flow.Message_INSAPI2OP)))"
                                    paths:
                                      - path:
                                          name: Invalid PIN
                                          actions:
                                            - communicate:
                                                name: Communicate
                                                communication:
                                                  exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"🚫Your verification was unsuccessful. Please review your information and try again. Until then policy will be in *Offered* Status.\")))"
                          "no":
                            actions:
                              - communicate:
                                  name: Communicate
                                  communication:
                                    exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"The status of the given policy is not \\\"offered.\\\" Please check and try again.⚠️\")))"
                paths:
                  - path:
                      name: Unable to retrieve policy details
                      actions:
                        - communicate:
                            name: Communicate
                            communication:
                              exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"🔍 We couldn't locate your policy details at the moment.\\nPossible reasons could be Invalid Policy Number❌\")))"
          - jumpToTask:
              name: Jump to Reusable Task
              targetTaskRef: "/digitalBot/tasks/task[General-Return To The Main Menu_946]"
        outputPaths:
          - outputPath:
              name: Unable to Update Policy Status
    - task:
        name: INS1-Claim My Policy
        refId: INS1-Claim My Policy_962
        actions:
          - disconnect:
              name: Disconnect
    - task:
        name: INS1-Policy Enrolment
        refId: INS1-Policy Enrolment_619
        variables:
          - integerVariable:
              name: Task.Index1
              initialValue:
                noValue: true
              isInput: false
              isOutput: false
          - integerVariable:
              name: Task.Index2
              initialValue:
                noValue: true
              isInput: false
              isOutput: false
        actions:
          - communicate:
              name: Communicate
              communication:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"To get started with your new insurance policy, I need to collect a few details. Let's begin!📝 \")))"
          - askForSlot:
              name: Ask for Slot
              slot:
                name: InsurnacePolicyType
              question:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"What type of policy are you looking for?🛡️⛨🚗🏡\")))"
              customValidation:
                noValue: true
              confirmationMode:
                lit: never
              chooser:
                lit:
                  presentation:
                    lit: quickReplies
                  carousel:
                    lit:
                      cards:
                        lit: []
                  quickReplies:
                    lit:
                      buttons:
                        lit:
                          - lit:
                              label:
                                noValue: true
                              value:
                                lit: Life
                              type:
                                lit: postback
                          - lit:
                              label:
                                noValue: true
                              value:
                                lit: Auto
                              type:
                                lit: postback
                          - lit:
                              label:
                                noValue: true
                              value:
                                lit: Home
                              type:
                                lit: postback
                          - lit:
                              label:
                                noValue: true
                              value:
                                lit: Health
                              type:
                                lit: postback
              noMatch:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"What type of policy are you looking for?\\n_Please choose only from given options_\")))"
              outputs:
                maxNoInputs:
                  enabled: false
          - askForSlot:
              name: Ask for Slot
              slot:
                name: TransactionAmount
              question:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Enter the coverage amount you prefer for your policy?💲\\n_#Minimum Coverage Amount Should be ₹100000_\")))"
              customValidation:
                noValue: true
              confirmationMode:
                lit: never
              noMatch:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please enter the valid coverage amount you prefer for your policy?\")))"
              outputs:
                maxNoInputs:
                  enabled: false
          - loop:
              name: Loop
              currentIndex:
                var: Task.Index1
              loopCount:
                lit: 3
              outputs:
                loop:
                  actions:
                    - askForSlot:
                        name: Ask for Slot
                        slot:
                          name: Date
                        question:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please enter the start date for your policy in the format YYYY-MM-DD📅\")))"
                        customValidation:
                          noValue: true
                        confirmationMode:
                          lit: never
                        noMatch:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please enter date in the requested format only.\\n_YYYY-MM-DD_\")))"
                        outputs:
                          maxNoInputs:
                            enabled: false
                    - decision:
                        name: Decision
                        condition:
                          exp: If(Slot.Date >= ToDate(GetCurrentDateTimeUtc()),true,false)
                        outputs:
                          "yes":
                            actions:
                              - updateData:
                                  name: Update Data
                                  statements:
                                    - string:
                                        variable: Flow.PolicyStartDate_INSAPI1INP
                                        value:
                                          exp: ToString(Slot.Date)
                              - clearSlot:
                                  name: Clear Slot
                                  slots:
                                    - slot:
                                        name: Date
                              - loopExit:
                                  name: Exit Loop
                          "no":
                            actions:
                              - clearSlot:
                                  name: Clear Slot
                                  slots:
                                    - slot:
                                        name: Date
                              - decision:
                                  name: Decision
                                  condition:
                                    exp: Task.Index1<2
                                  outputs:
                                    "yes":
                                      actions:
                                        - communicate:
                                            name: Communicate
                                            communication:
                                              exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Start date shouldn't be less than current date.\")))"
                                        - loopNext:
                                            name: Next Loop
                                    "no":
                                      actions:
                                        - communicate:
                                            name: Communicate
                                            communication:
                                              exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Start date shouldn't be less than current date and you have exceeds your tries.\")))"
                                        - jumpToTask:
                                            name: Jump to Reusable Task
                                            targetTaskRef: "/digitalBot/tasks/task[General-Return To The Main Menu_946]"
          - loop:
              name: Loop
              currentIndex:
                var: Task.Index2
              loopCount:
                lit: 3
              outputs:
                loop:
                  actions:
                    - askForSlot:
                        name: Ask for Slot
                        slot:
                          name: Date
                        question:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please enter the end date for your policy in the format YYYY-MM-DD.📅\")))"
                        customValidation:
                          noValue: true
                        confirmationMode:
                          lit: never
                        noMatch:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please enter date in the requested format only.\\n_YYYY-MM-DD_\")))"
                        outputs:
                          maxNoInputs:
                            enabled: false
                    - decision:
                        name: Decision
                        condition:
                          exp: If(Slot.Date>=ToDate(AddYears(GetCurrentDateTimeUtc(),1)),true,false)
                        outputs:
                          "yes":
                            actions:
                              - updateData:
                                  name: Update Data
                                  statements:
                                    - string:
                                        variable: Flow.PolicyEndDate_INSAPI1INP
                                        value:
                                          exp: ToString(Slot.Date)
                              - clearSlot:
                                  name: Clear Slot
                                  slots:
                                    - slot:
                                        name: Date
                              - loopExit:
                                  name: Exit Loop
                          "no":
                            actions:
                              - clearSlot:
                                  name: Clear Slot
                                  slots:
                                    - slot:
                                        name: Date
                              - decision:
                                  name: Decision
                                  condition:
                                    exp: Task.Index2<2
                                  outputs:
                                    "yes":
                                      actions:
                                        - communicate:
                                            name: Communicate
                                            communication:
                                              exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Gap between Start Date and End Date should be greater than atlease 1 year.\")))"
                                        - loopNext:
                                            name: Next Loop
                                    "no":
                                      actions:
                                        - communicate:
                                            name: Communicate
                                            communication:
                                              exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Gap between Start Date and End Date should be greater than atlease 1 year and you have exceeds your tries.\\nReturning to the Main Menu.\")))"
                                        - jumpToTask:
                                            name: Jump to Reusable Task
                                            targetTaskRef: "/digitalBot/tasks/task[Main Menu_63]"
          - askForSlot:
              name: Ask for Slot
              slot:
                name: Name
              question:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"How would you like to title your policy?🏷️\")))"
              customValidation:
                noValue: true
              confirmationMode:
                lit: never
              noMatch:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"How would you like to title your policy? \\n_Please enter valid title._\")))"
              outputs:
                maxNoInputs:
                  enabled: false
          - updateData:
              name: Update Data
              statements:
                - string:
                    variable: Flow.PolicyTitle_INSAPI1INP
                    value:
                      exp: Slot.Name
                - string:
                    variable: Flow.PolicyType_INSAPI1INP
                    value:
                      exp: Slot.InsurnacePolicyType
                - decimal:
                    variable: Flow.PolicyCoverageAmount_INSAPI1INP
                    value:
                      exp: ToDecimal(Slot.TransactionAmount)
          - clearSlot:
              name: Clear Slot
              slots:
                - slot:
                    name: InsurnacePolicyType
                - slot:
                    name: Name
                - slot:
                    name: TransactionAmount
          - callTask:
              name: Call Task
              targetTaskRef: "/digitalBot/tasks/task[INSAPI1-Create Policy With Offered Status_628]"
              outputs:
                default:
                  actions:
                    - communicate:
                        name: Communicate
                        communication:
                          exp: "MakeCommunication(\n  ToCommunication(MakeCommunication(\"Congratulations!🎉You're halfway through the process! 🌟\\nWe're excited to offer you the following insurance policy of type *\", Flow.PolicyType_INSAPI1OP, \"* with coverage amount of *₹\", Flow.CoverageAmount_INSAPI1OP, \"*. your policy will begin on *\", Flow.StartDate_INSAPI1OP, \"* and ends on *\", Flow.EndDate_INSAPI1OP, \"* and having the policy number as *\", Flow.PolicyNumber_INSAPI1OP, \"* owned by *\", Flow.FirstName, \" \", Flow.LastName, \".*\\nThe monthly premium for this policy is *₹\", Flow.PremiumAmountPerMonth_INSAPI1OP, \"* \\nCurrently policy is in *\", Flow.Status_INSAPI1OP, \"* status🔸. \\nThis policy will become *Active*✅ from the start date of the policy i.e. \", Flow.StartDate_INSAPI1OP, \" if you choose to accept this policy.\\nAre you ready to accept this policy?\\n\")))"
                    - askForBoolean:
                        name: Ask for Yes / No
                        question:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Do you want to proceed?\")))"
                        noMatch:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please input \\\"Yes\\\" or \\\"No\\\". Do you want to proceed?\")))"
                        outputs:
                          "yes":
                            actions:
                              - callTask:
                                  name: Call Task
                                  targetTaskRef: "/digitalBot/tasks/task[ACCAPI5-Validate Master PIN_720]"
                                  outputs:
                                    default:
                                      actions:
                                        - communicate:
                                            name: Communicate
                                            communication:
                                              exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Activating your policy. one moment please......⏳\")))"
                                        - updateData:
                                            name: Update Data
                                            statements:
                                              - string:
                                                  variable: Flow.PolicyNumber_INSAPI2INP
                                                  value:
                                                    exp: Flow.PolicyNumber_INSAPI1OP
                                              - string:
                                                  variable: Flow.NewStatus_INSAPI2INP
                                                  value:
                                                    exp: "\"Active\""
                                        - callTask:
                                            name: Call Task
                                            targetTaskRef: "/digitalBot/tasks/task[INSAPI2-Update Policy With Given Status_681]"
                                            outputs:
                                              default:
                                                actions:
                                                  - communicate:
                                                      name: Communicate
                                                      communication:
                                                        exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"✅ Your policy has been successfully activated! 🎉\")))"
                                              paths:
                                                - path:
                                                    name: Unable to Update Status
                                                    actions:
                                                      - communicate:
                                                          name: Communicate
                                                          communication:
                                                            exp: "MakeCommunication(\n  ToCommunication(MakeCommunication(\"😞 Unfortunately, we encountered an issue activating your policy.\\nReason could be \", Flow.Message_INSAPI2OP, \"\\n\")))"
                                    paths:
                                      - path:
                                          name: Invalid PIN
                                          actions:
                                            - communicate:
                                                name: Communicate
                                                communication:
                                                  exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"🚫Your verification was unsuccessful. Please review your information and try again. Until then policy will be in *Offered* Status.\")))"
                          "no":
                            actions:
                              - communicate:
                                  name: Communicate
                                  communication:
                                    exp: "MakeCommunication(\n  ToCommunication(MakeCommunication(\"Understood!☻\\nbut please note your policy number *\", Flow.PolicyNumber_INSAPI1OP, \"*, you can activate this policy in the future whenever you're ready by using this policy number. If you have any questions or need assistance later on, feel free to reach out. We're here to help!\\n\")))"
                              - jumpToTask:
                                  name: Jump to Reusable Task
                                  targetTaskRef: "/digitalBot/tasks/task[General-Return To The Main Menu_946]"
                          maxNoInputs:
                            enabled: false
                paths:
                  - path:
                      name: Unable to Offer Policy
                      actions:
                        - communicate:
                            name: Communicate
                            communication:
                              exp: "MakeCommunication(\n  ToCommunication(MakeCommunication(\"We regret to inform you that we are currently unable to offer you a policy based on the provided information.\\nFollowing could be one of the reason:\\n\", Flow.Message_INSAPI1OP)))"
                        - jumpToTask:
                            name: Jump to Reusable Task
                            targetTaskRef: "/digitalBot/tasks/task[General-Return To The Main Menu_946]"
          - jumpToTask:
              name: Jump to Reusable Task
              targetTaskRef: "/digitalBot/tasks/task[General-Return To The Main Menu_946]"
    - task:
        name: INS1-View Policy Details
        refId: INS1-View Policy Details_620
        actions:
          - askForSlot:
              name: Ask for Slot
              slot:
                name: PolicyNumber
              question:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please enter your Policy number?🔢\")))"
              customValidation:
                noValue: true
              confirmationMode:
                lit: never
              noMatch:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please enter your Policy number in the format 'POLICY-XXXX'🔢\")))"
              outputs:
                maxNoInputs:
                  enabled: false
          - updateData:
              name: Update Data
              statements:
                - string:
                    variable: Flow.PolicyNumber_INSAPI3INP
                    value:
                      exp: Slot.PolicyNumber
          - clearSlot:
              name: Clear Slot
              slots:
                - slot:
                    name: PolicyNumber
          - callTask:
              name: Call Task
              targetTaskRef: "/digitalBot/tasks/task[ACCAPI5-Validate Master PIN_720]"
              outputs:
                default:
                  actions:
                    - callTask:
                        name: Call Task
                        targetTaskRef: "/digitalBot/tasks/task[INSAPI3-View Policy Details_703]"
                        outputs:
                          default:
                            actions:
                              - decision:
                                  name: Decision
                                  condition:
                                    exp: If(Flow.CustomerBackEndID==Flow.PolicyContactID_INSAPI3OP,true,false)
                                  outputs:
                                    "yes":
                                      actions:
                                        - updateData:
                                            name: Update Data
                                            statements:
                                              - duration:
                                                  variable: Flow.TotalTermPolicy
                                                  value:
                                                    exp: DateDiff(ToDate(Flow.EndDate_INSAPI3OP),ToDate(Flow.StartDate_INSAPI3OP))
                                              - duration:
                                                  variable: Flow.RemainingPolicyTerm
                                                  value:
                                                    exp: DateDiff(ToDate(Flow.EndDate_INSAPI3OP),ToDate(GetCurrentDateTimeUtc()))
                                        - communicate:
                                            name: Communicate
                                            communication:
                                              exp: "MakeCommunication(\n  ToCommunication(MakeCommunication(\"📄*Policy Details:*\\n📘 *Type:* \", Flow.PolicyType_INSAPI3OP, \" Insurance\\n💰 *Coverage Amount:* ₹\", Flow.CoverageAmount_INSAPI3OP, \"\\n🟢 *Status* : \", Flow.Status_INSAPI3OP, \"\\n📅 *Coverage Period:* From \", Flow.StartDate_INSAPI3OP, \" To \", Flow.EndDate_INSAPI3OP, \"\\n🕰️ *Total Term Length:*  \", Flow.TotalTermPolicy, \"\\n⏳ *Remaining Coverage Period:* \", Flow.RemainingPolicyTerm, \"\\n📝 *Policy Title:* \", Flow.PolicyTitle_INSAPI3OP, \"\\n🔢 *Policy Number:* \", Flow.PolicyNumber_INSAPI3OP, \"\\n👤 *Owner:* \", Flow.FirstName, \" \", Flow.LastName, \"\\n💵 *Premium:* ₹\", Flow.PremiumAmount_INSAPI3OP, \"/month\")))"
                                    "no":
                                      actions:
                                        - communicate:
                                            name: Communicate
                                            communication:
                                              exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"⚠️For privacy and security reasons, you're limited to viewing your own policy details.\")))"
                          paths:
                            - path:
                                name: Unable to retrieve policy details
                                actions:
                                  - communicate:
                                      name: Communicate
                                      communication:
                                        exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"🔍 We couldn't locate your policy details at the moment.\\nPossible reasons could be Invalid Policy Number❌\")))"
                paths:
                  - path:
                      name: Invalid PIN
                      actions:
                        - communicate:
                            name: Communicate
                            communication:
                              exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"❌ Wrong PIN! Please try again with the correct 4-digit PIN.\")))"
          - communicate:
              name: Communicate
              communication:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"🔄 Returing you to the Main Menu\")))"
          - jumpToTask:
              name: Jump to Reusable Task
              targetTaskRef: "/digitalBot/tasks/task[Main Menu_63]"
    - task:
        name: INSAPI1-Create Policy With Offered Status
        refId: INSAPI1-Create Policy With Offered Status_628
        variables:
          - booleanVariable:
              name: Task.IsPolicyCreated_INSAPI1OP
              initialValue:
                noValue: true
              isInput: false
              isOutput: false
        actions:
          - callData:
              name: Call Data Action
              timeout:
                lit:
                  minutes: 1
              category:
                Salesforce Data Actions-SKRA:
                  dataAction:
                    IAS-Insurance- OfferPolicy:
                      inputs:
                        CustomerBackEndID:
                          exp: Flow.CustomerBackEndID
                        PolicyType:
                          exp: Flow.PolicyType_INSAPI1INP
                        CoverageAmount:
                          exp: Flow.PolicyCoverageAmount_INSAPI1INP
                        PolicyStartDate:
                          exp: Flow.PolicyStartDate_INSAPI1INP
                        PolicyEndDate:
                          exp: Flow.PolicyEndDate_INSAPI1INP
                        NameOfThePolicy:
                          exp: Flow.PolicyTitle_INSAPI1INP
                      successOutputs:
                        Message:
                          var: Flow.Message_INSAPI1OP
                        Status__c:
                          var: Flow.Status_INSAPI1OP
                        Premium_Amount__c:
                          var: Flow.PremiumAmountPerMonth_INSAPI1OP
                        Policy_Type__c:
                          var: Flow.PolicyType_INSAPI1OP
                        End_Date__c:
                          var: Flow.EndDate_INSAPI1OP
                        Start_Date__c:
                          var: Flow.StartDate_INSAPI1OP
                        Coverage_Amount__c:
                          var: Flow.CoverageAmount_INSAPI1OP
                        Name:
                          var: Flow.Name_INSAPI1OP
                        Contact__c:
                          noValue: true
                        PolicyNumber:
                          var: Flow.PolicyNumber_INSAPI1OP
                        PolicyId:
                          var: Flow.PolicyID_INSAPI1OP
                        IsPolicyCreated:
                          var: Task.IsPolicyCreated_INSAPI1OP
                      failureOutputs:
                        errorCode:
                          noValue: true
                        status:
                          noValue: true
                        correlationId:
                          noValue: true
                        entityId:
                          noValue: true
                        entityName:
                          noValue: true
                        userMessage:
                          noValue: true
                        userParamsMessage:
                          noValue: true
                        userParams.key:
                          noValue: true
                        userParams.value:
                          noValue: true
                        details.errorCode:
                          noValue: true
                        details.fieldName:
                          noValue: true
                        details.entityId:
                          noValue: true
                        details.entityName:
                          noValue: true
              outputs:
                success:
                  actions:
                    - decision:
                        name: Decision
                        condition:
                          exp: Task.IsPolicyCreated_INSAPI1OP
                        outputs:
                          "yes":
                            actions:
                              - endTask:
                                  name: End Task
                                  outputPath:
                                    name: default
                          "no":
                            actions:
                              - endTask:
                                  name: End Task
                                  outputPath:
                                    name: Unable to Offer Policy
                failure:
                  actions:
                    - communicate:
                        name: Communicate
                        communication:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're currently facing some technical failure🔧 issues in INSAPI1.\")))"
                timeout:
                  actions:
                    - communicate:
                        name: Communicate
                        communication:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're currently facing some technical timeout ⏲ issues in insAPI1.\")))"
          - jumpToTask:
              name: Jump to Reusable Task
              targetTaskRef: "/digitalBot/tasks/task[General- Disconnect_947]"
        outputPaths:
          - outputPath:
              name: Unable to Offer Policy
    - task:
        name: INSAPI2-Update Policy With Given Status
        refId: INSAPI2-Update Policy With Given Status_681
        variables:
          - booleanVariable:
              name: Task.IsStatusUpdated_INSAPI2OP
              initialValue:
                noValue: true
              isInput: false
              isOutput: false
        actions:
          - callData:
              name: Call Data Action
              timeout:
                lit:
                  minutes: 1
              category:
                Salesforce Data Actions-SKRA:
                  dataAction:
                    IAS-Insurance-Update Policy With Given Status:
                      inputs:
                        PolicyNumber:
                          exp: Flow.PolicyNumber_INSAPI2INP
                        NewStatus:
                          exp: Flow.NewStatus_INSAPI2INP
                      successOutputs:
                        IsStatusUpdated:
                          var: Task.IsStatusUpdated_INSAPI2OP
                        NewStatus:
                          var: Flow.NewStatus_INSAPI2OP
                        MsgCode:
                          var: Flow.MsgCode_INSAPI2OP
                        PolicyId:
                          noValue: true
                        Message:
                          var: Flow.Message_INSAPI2OP
                      failureOutputs:
                        errorCode:
                          noValue: true
                        status:
                          noValue: true
                        correlationId:
                          noValue: true
                        entityId:
                          noValue: true
                        entityName:
                          noValue: true
                        userMessage:
                          noValue: true
                        userParamsMessage:
                          noValue: true
                        userParams.key:
                          noValue: true
                        userParams.value:
                          noValue: true
                        details.errorCode:
                          noValue: true
                        details.fieldName:
                          noValue: true
                        details.entityId:
                          noValue: true
                        details.entityName:
                          noValue: true
              outputs:
                success:
                  actions:
                    - decision:
                        name: Decision
                        condition:
                          exp: Task.IsStatusUpdated_INSAPI2OP
                        outputs:
                          "yes":
                            actions:
                              - endTask:
                                  name: End Task
                                  outputPath:
                                    name: default
                          "no":
                            actions:
                              - endTask:
                                  name: End Task
                                  outputPath:
                                    name: Unable to Update Status
                failure:
                  actions:
                    - communicate:
                        name: Communicate
                        communication:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're currently facing some technical failure🔧 issues in INSAPI2.\")))"
                timeout:
                  actions:
                    - communicate:
                        name: Communicate
                        communication:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're currently facing some technical timeout ⏲ issues in INSAPI2.\")))"
          - jumpToTask:
              name: Jump to Reusable Task
              targetTaskRef: "/digitalBot/tasks/task[General- Disconnect_947]"
        outputPaths:
          - outputPath:
              name: Unable to Update Status
    - task:
        name: INSAPI3-View Policy Details
        refId: INSAPI3-View Policy Details_703
        variables:
          - booleanVariable:
              name: Task.IsPolicyFound_INSAPI3OP
              initialValue:
                noValue: true
              isInput: false
              isOutput: false
        actions:
          - callData:
              name: Call Data Action
              timeout:
                lit:
                  minutes: 1
              category:
                Salesforce Data Actions-SKRA:
                  dataAction:
                    IAS-Insurance-View Policy Details:
                      inputs:
                        PolicyNumber:
                          exp: Flow.PolicyNumber_INSAPI3INP
                      successOutputs:
                        IsPolicyFound:
                          var: Task.IsPolicyFound_INSAPI3OP
                        Message:
                          var: Flow.Message_INSAPI3OP
                        PremiumAmount:
                          var: Flow.PremiumAmount_INSAPI3OP
                        PolicyType:
                          var: Flow.PolicyType_INSAPI3OP
                        EndDate:
                          var: Flow.EndDate_INSAPI3OP
                        StartDate:
                          var: Flow.StartDate_INSAPI3OP
                        CoverageAmount:
                          var: Flow.CoverageAmount_INSAPI3OP
                        Contact:
                          var: Flow.PolicyContactID_INSAPI3OP
                        Status:
                          var: Flow.Status_INSAPI3OP
                        Name:
                          var: Flow.PolicyTitle_INSAPI3OP
                        PolicyNumber:
                          var: Flow.PolicyNumber_INSAPI3OP
                        PolicyId:
                          var: Flow.PolicyID_INSAPI3OP
                      failureOutputs:
                        errorCode:
                          noValue: true
                        status:
                          noValue: true
                        correlationId:
                          noValue: true
                        entityId:
                          noValue: true
                        entityName:
                          noValue: true
                        userMessage:
                          noValue: true
                        userParamsMessage:
                          noValue: true
                        userParams.key:
                          noValue: true
                        userParams.value:
                          noValue: true
                        details.errorCode:
                          noValue: true
                        details.fieldName:
                          noValue: true
                        details.entityId:
                          noValue: true
                        details.entityName:
                          noValue: true
              outputs:
                success:
                  actions:
                    - decision:
                        name: Decision
                        condition:
                          exp: Task.IsPolicyFound_INSAPI3OP
                        outputs:
                          "yes":
                            actions:
                              - endTask:
                                  name: End Task
                                  outputPath:
                                    name: default
                          "no":
                            actions:
                              - endTask:
                                  name: End Task
                                  outputPath:
                                    name: Unable to retrieve policy details
                failure:
                  actions:
                    - communicate:
                        name: Communicate
                        communication:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're currently facing some failure technical issues in INS-API3. Please reach us again after some time.\")))"
                timeout:
                  actions:
                    - communicate:
                        name: Communicate
                        communication:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're currently facing some timeout technical issues in INS-API3. Please reach us again after some time.\")))"
          - disconnect:
              name: Disconnect
        outputPaths:
          - outputPath:
              name: Unable to retrieve policy details
    - task:
        name: Main Menu
        refId: Main Menu_63
        actions:
          - digitalMenu:
              name: Digital Menu
              question:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"*MainMenu*📋\\n_Please choose from the following options._\")))"
              noMatch:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please select only from the options provided.👇\")))"
              selection:
                noValue: true
              knowledgeSearchResult:
                noValue: true
              chooser:
                lit:
                  presentation:
                    lit: quickReplies
                  carousel:
                    lit:
                      cards:
                        lit:
                          - lit:
                              title:
                                lit: Card 1
                              description:
                                lit: ""
                              image:
                                noValue: true
                              buttons:
                                lit:
                                  - lit:
                                      label:
                                        noValue: true
                                      value:
                                        lit: Customer Profile Update
                                      type:
                                        lit: postback
                          - lit:
                              title:
                                lit: Card 2
                              description:
                                lit: ""
                              image:
                                noValue: true
                              buttons:
                                lit:
                                  - lit:
                                      label:
                                        noValue: true
                                      value:
                                        lit: "Banking "
                                      type:
                                        lit: postback
                          - lit:
                              title:
                                lit: Card 3
                              description:
                                lit: ""
                              image:
                                noValue: true
                              buttons:
                                lit:
                                  - lit:
                                      label:
                                        noValue: true
                                      value:
                                        lit: Insurance
                                      type:
                                        lit: postback
                          - lit:
                              title:
                                lit: Card 4
                              description:
                                lit: ""
                              image:
                                noValue: true
                              buttons:
                                lit:
                                  - lit:
                                      label:
                                        noValue: true
                                      value:
                                        lit: Exit from Chat
                                      type:
                                        lit: postback
                  quickReplies:
                    lit:
                      buttons:
                        lit:
                          - lit:
                              label:
                                noValue: true
                              value:
                                lit: Account Services📁
                              type:
                                lit: postback
                          - lit:
                              label:
                                noValue: true
                              value:
                                lit: Banking📱
                              type:
                                lit: postback
                          - lit:
                              label:
                                noValue: true
                              value:
                                lit: Insurance🛡️
                              type:
                                lit: postback
                          - lit:
                              label:
                                noValue: true
                              value:
                                lit: Raise a Case 🤺
                              type:
                                lit: postback
                          - lit:
                              label:
                                noValue: true
                              value:
                                lit: What's the Status of Case✅
                              type:
                                lit: postback
                          - lit:
                              label:
                                noValue: true
                              value:
                                lit: Add Comment to Case💬
                              type:
                                lit: postback
                          - lit:
                              label:
                                noValue: true
                              value:
                                lit: Chat with Live Agent👩🏻‍💻
                              type:
                                lit: postback
                          - lit:
                              label:
                                noValue: true
                              value:
                                lit: Talk to Us📞
                              type:
                                lit: postback
                          - lit:
                              label:
                                noValue: true
                              value:
                                lit: End Chat🏁
                              type:
                                lit: postback
              outputs:
                maxNoInputs:
                  enabled: false
                paths:
                  - path:
                      name: Account Services📁
                      actions:
                        - jumpToTask:
                            name: Jump to Reusable Task
                            targetTaskRef: "/digitalBot/tasks/task[ACC-Account Services_791]"
                  - path:
                      name: Banking📱
                      actions:
                        - jumpToTask:
                            name: Jump to Reusable Task
                            targetTaskRef: "/digitalBot/tasks/task[BNK-Banking Menu_282]"
                  - path:
                      name: Insurance🛡️
                      actions:
                        - jumpToTask:
                            name: Jump to Reusable Task
                            targetTaskRef: "/digitalBot/tasks/task[INS-Insurance Menu_298]"
                  - path:
                      name: Raise a Case 🤺
                      actions:
                        - jumpToTask:
                            name: Jump to Reusable Task
                            targetTaskRef: "/digitalBot/tasks/task[CASE-Raise a Common Case_1053]"
                  - path:
                      name: What's the Status of Case✅
                      actions:
                        - jumpToTask:
                            name: Jump to Reusable Task
                            targetTaskRef: "/digitalBot/tasks/task[CASE-Get Status of Case_1069]"
                  - path:
                      name: Add Comment to Case💬
                      actions:
                        - jumpToTask:
                            name: Jump to Reusable Task
                            targetTaskRef: "/digitalBot/tasks/task[CASE-Add Comment to Case_1130]"
                  - path:
                      name: Chat with Live Agent👩🏻‍💻
                      actions:
                        - jumpToTask:
                            name: Jump to Reusable Task
                            targetTaskRef: "/digitalBot/tasks/task[SCB-Chat with Live Agent_1193]"
                  - path:
                      name: Talk to Us📞
                      actions:
                        - jumpToTask:
                            name: Jump to Reusable Task
                            targetTaskRef: "/digitalBot/tasks/task[SCB-Talk to US_1149]"
                  - path:
                      name: End Chat🏁
                      actions:
                        - jumpToTask:
                            name: Jump to Reusable Task
                            targetTaskRef: "/digitalBot/tasks/task[General- Exit from Chat_276]"
    - task:
        name: SCB-Chat with Live Agent
        refId: SCB-Chat with Live Agent_1193
        actions:
          - communicate:
              name: Communicate
              communication:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Connecting you to a live agent, please hold on... ⏳\")))"
          - exitBotFlow:
              name: Exit Bot Flow
    - task:
        name: SCB-Schedule a Call
        refId: SCB-Schedule a Call_1151
        variables:
          - stringVariable:
              name: Task.CallBackDate
              initialValue:
                noValue: true
              isInput: false
              isOutput: false
          - stringVariable:
              name: Task.CallbackTime
              initialValue:
                noValue: true
              isInput: false
              isOutput: false
          - integerVariable:
              name: Task.LoopIndex1
              initialValue:
                noValue: true
              isInput: false
              isOutput: false
        actions:
          - loop:
              name: Loop
              currentIndex:
                var: Task.LoopIndex1
              loopCount:
                lit: 99
              outputs:
                loop:
                  actions:
                    - askForSlot:
                        name: Ask for Slot
                        slot:
                          name: Date
                        question:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"When would you like us to call you? Please enter the date in below format.📅\\n_Format: YYYY-MM-DD _\")))"
                        customValidation:
                          noValue: true
                        confirmationMode:
                          lit: never
                        noMatch:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\" Please enter the valid date in below format only.📅\\n_Format: YYYY-MM-DD _\")))"
                        outputs:
                          maxNoInputs:
                            enabled: false
                    - decision:
                        name: Decision
                        condition:
                          exp: "(Slot.Date<ToDate(GetCurrentDateTimeUtc()) or Slot.Date>ToDate(AddDays(GetCurrentDateTimeUtc(),3)))\n\n"
                        outputs:
                          "yes":
                            actions:
                              - clearSlot:
                                  name: Clear Slot
                                  slots:
                                    - slot:
                                        name: Date
                              - communicate:
                                  name: Communicate
                                  communication:
                                    exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"⚠️You cannot schedule a call back for a past date or more than 3 days from today. Please choose an appropriate date within this range.📅 \")))"
                              - loopNext:
                                  name: Next Loop
                          "no":
                            actions:
                              - updateData:
                                  name: Update Data
                                  statements:
                                    - string:
                                        variable: Task.CallBackDate
                                        value:
                                          exp: ToString(Slot.Date)
                              - clearSlot:
                                  name: Clear Slot
                                  slots:
                                    - slot:
                                        name: Date
                              - loopExit:
                                  name: Exit Loop
          - askForSlot:
              name: Ask for Slot
              slot:
                name: TimeFormatHHMM
              question:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"At what time would you like to schedule the call? ⏲\\n_Use the format HH:MM in 24-hour time_\")))"
              customValidation:
                noValue: true
              confirmationMode:
                lit: never
              noMatch:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please provide valid time?\\n_Use the format HH:MM in 24-hour time_\")))"
              outputs:
                maxNoInputs:
                  enabled: false
          - updateData:
              name: Update Data
              statements:
                - string:
                    variable: Task.CallbackTime
                    value:
                      exp: ToString(Slot.TimeFormatHHMM)
                - string:
                    variable: Flow.CallbackSchueduledTime_SCBAPI1INP
                    value:
                      exp: "Task.CallBackDate+\"T\"+Task.CallbackTime+\":00.000Z\""
          - callTask:
              name: Call Task
              targetTaskRef: "/digitalBot/tasks/task[SCBAPI1-Create a Callback_1152]"
              outputs:
                default:
                  actions:
                    - communicate:
                        name: Communicate
                        communication:
                          exp: "MakeCommunication(\n  ToCommunication(MakeCommunication(\"Cool! your call is scheduled.☎️\\n📅*Date:*  \", Task.CallBackDate, \"\\n⏰*Time:*  \", Task.CallbackTime + \":00\", \"\\n📲*Phone Number:*  \", Flow.PhoneNumber, \" \")))"
                paths:
                  - path:
                      name: Unable to Schedule
                      actions:
                        - communicate:
                            name: Communicate
                            communication:
                              exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"🚫Sorry, we’re unable to schedule a call at the moment. Please try again later. 😞\")))"
          - jumpToTask:
              name: Jump to Reusable Task
              targetTaskRef: "/digitalBot/tasks/task[General-Return To The Main Menu_946]"
    - task:
        name: SCB-Speak Now
        refId: SCB-Speak Now_1150
        actions:
          - updateData:
              name: Update Data
              statements:
                - string:
                    variable: Flow.CallbackSchueduledTime_SCBAPI1INP
                    value:
                      exp: "ToString(AddSeconds(GetCurrentDateTimeUtc(),10))\n"
          - callTask:
              name: Call Task
              targetTaskRef: "/digitalBot/tasks/task[SCBAPI1-Create a Callback_1152]"
              outputs:
                default:
                  actions:
                    - communicate:
                        name: Communicate
                        communication:
                          exp: "MakeCommunication(\n  ToCommunication(MakeCommunication(\"📲Hold tight! You'll get a call within 2 minutes to your phone number \", Flow.PhoneNumber, \"🚀\")))"
                paths:
                  - path:
                      name: Unable to Schedule
                      actions:
                        - communicate:
                            name: Communicate
                            communication:
                              exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"🚫Sorry, we’re unable to schedule a call at the moment. Please try again later. 😞\")))"
          - jumpToTask:
              name: Jump to Reusable Task
              targetTaskRef: "/digitalBot/tasks/task[General-Return To The Main Menu_946]"
    - task:
        name: SCB-Talk to US
        refId: SCB-Talk to US_1149
        actions:
          - digitalMenu:
              name: Digital Menu
              question:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"When would we try to call you?🕗\")))"
              noMatch:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Tell me again what you would like to do.\")))"
              selection:
                noValue: true
              knowledgeSearchResult:
                noValue: true
              chooser:
                lit:
                  presentation:
                    lit: quickReplies
                  carousel:
                    lit:
                      cards:
                        lit: []
                  quickReplies:
                    lit:
                      buttons:
                        lit:
                          - lit:
                              label:
                                noValue: true
                              value:
                                lit: Call Now📲
                              type:
                                lit: postback
                          - lit:
                              label:
                                noValue: true
                              value:
                                lit: Arrange a call for later⏰
                              type:
                                lit: postback
              outputs:
                maxNoInputs:
                  enabled: false
                paths:
                  - path:
                      name: Call Now📲
                      actions:
                        - jumpToTask:
                            name: Jump to Reusable Task
                            targetTaskRef: "/digitalBot/tasks/task[SCB-Speak Now_1150]"
                  - path:
                      name: Arrange a call for later⏰
                      actions:
                        - jumpToTask:
                            name: Jump to Reusable Task
                            targetTaskRef: "/digitalBot/tasks/task[SCB-Schedule a Call_1151]"
    - task:
        name: SCBAPI1-Create a Callback
        refId: SCBAPI1-Create a Callback_1152
        actions:
          - communicate:
              name: Communicate
              communication:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Scheduling your call, please hold on... ⏳\")))"
          - callData:
              name: Call Data Action
              timeout:
                lit:
                  minutes: 1
              category:
                Genesys Cloud Data Actions --mine:
                  dataAction:
                    FinBot-Create a Scheduled Call Back:
                      inputs:
                        QueueID:
                          exp: "\"839e3658-86c5-4c66-ae57-f9f6d03ba4a2\""
                        CustomerName:
                          exp: Flow.FirstName
                        CustomerCallbackNumber:
                          exp: Flow.PhoneNumber
                        CallbackScheduledTime:
                          exp: Flow.CallbackSchueduledTime_SCBAPI1INP
                        ScriptId:
                          exp: "\" \""
                      successOutputs:
                        ConversationID:
                          var: Flow.ConversationID_SCBAPI1OP
                      failureOutputs:
                        errorCode:
                          noValue: true
                        status:
                          noValue: true
                        correlationId:
                          noValue: true
                        entityId:
                          noValue: true
                        entityName:
                          noValue: true
                        userMessage:
                          noValue: true
                        userParamsMessage:
                          noValue: true
                        userParams.key:
                          noValue: true
                        userParams.value:
                          noValue: true
                        details.errorCode:
                          noValue: true
                        details.fieldName:
                          noValue: true
                        details.entityId:
                          noValue: true
                        details.entityName:
                          noValue: true
              outputs:
                success:
                  actions:
                    - decision:
                        name: Decision
                        condition:
                          exp: IsNotSetOrEmpty(flow.ConversationID_SCBAPI1OP)
                        outputs:
                          "yes":
                            actions:
                              - endTask:
                                  name: End Task
                                  outputPath:
                                    name: Unable to Schedule
                          "no":
                            actions:
                              - endTask:
                                  name: End Task
                                  outputPath:
                                    name: default
                failure:
                  actions:
                    - communicate:
                        name: Communicate
                        communication:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're currently facing some technical failure🔧 issues in SCBAPI1.\")))"
                timeout:
                  actions:
                    - communicate:
                        name: Communicate
                        communication:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're currently facing some technical timeout ⏲ issues in SCBAPI1.\")))"
          - jumpToTask:
              name: Jump to Reusable Task
              targetTaskRef: "/digitalBot/tasks/task[General- Disconnect_947]"
        outputPaths:
          - outputPath:
              name: Unable to Schedule
    - task:
        name: Pending
        refId: Pending_1203
        actions:
          - askForBoolean:
              name: Ask for Yes / No
              question:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Seems you're not registered with us yet. Let's get started. Can I start the registration process for you?✍️\")))"
              noMatch:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please input \\\"Yes\\\" or \\\"No\\\". Do you want to registration process?\")))"
              outputs:
                "no":
                  actions:
                    - askForBoolean:
                        name: Ask for Yes / No
                        question:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Registration is required to continue. Would you like to start the registration process now? ✍️\")))"
                        noMatch:
                          exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please input \\\"Yes\\\" or \\\"No\\\". Do you want to proceed?\")))"
                        outputs:
                          "no":
                            actions:
                              - communicate:
                                  name: Communicate
                                  communication:
                                    exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"😕 That's okay! If you change your mind, I'll be here to help.\")))"
                              - communicate:
                                  name: Communicate
                                  communication:
                                    exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're disconnecting the current interaction now. Have a great day!👋\")))"
                              - disconnect:
                                  name: Disconnect
                          maxNoInputs:
                            enabled: false
                maxNoInputs:
                  enabled: false
          - jumpToTask:
              name: Jump to Reusable Task
              targetTaskRef: "/digitalBot/tasks/task[ACC-Register Customer_845]"
  settingsBotFlow:
    none: true
  settingsUserInput:
    noMatchesMax:
      lit: 3
    noInputsMax:
      lit: 3
    noInputsTimeout:
      lit:
        minutes: 1
    endOfSessionMessage:
      exp: "MakeCommunication(\n  ToCommunication(\"I have not heard from you in a while, so I am closing this chat, please come back if you need my help again. Thank you.\"))"
    confirmationRejectionsMax:
      lit: 3
    collectionLowConfidenceThreshold:
      lit: 20
    collectionHighConfidenceThreshold:
      lit: 70
    confirmationLowConfidenceThreshold:
      lit: 40
    noMatchApology:
      exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Sorry.\")))"
    noInputApology:
      exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Sorry, I didn't receive any input from you.\")))"
    noToConfirmationApology:
      exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"My mistake.\")))"
    confirmationNoMatchApology:
      exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Sorry, please input \\\"Yes\\\" or \\\"No\\\".\")))"
    confirmationNoInputApology:
      exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Sorry, I didn't receive any input from you.  Please input \\\"Yes\\\" or \\\"No\\\".\")))"
  settingsKnowledge:
    none: true
  bots:
    - bot:
        name: Starting Task
        refId: Starting Task_10
        actions:
          - communicate:
              name: Communicate
              communication:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"🤖Hi! FinBot here. To assist you better, Could you please provide your phone number?\\n\\n*Test Data:*\\n\\n*Phone Number:* +918074794107\\n*Master PIN:* 1234\\n\\n*Bank Account Number:* CUST-0029\\n*Bank Account PIN:* 1111\\n\\n*Notes:* \\n->You can't have multiple bank accounts of same type.\\n\")))"
          - askForSlot:
              name: Ask for Slot
              slot:
                name: PhoneNumber
              question:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please enter your India phone number including country code?📲\\n_(Format : +918074794107)_\")))"
              customValidation:
                noValue: true
              confirmationMode:
                lit: never
              noMatch:
                exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Please enter your phone number as shown in below format only?💯\\n_(Accepted Format : +91XXXXXXXXXX)_\")))"
              outputs:
                maxNoInputs:
                  enabled: false
          - updateData:
              name: Update Data
              statements:
                - string:
                    variable: Flow.PhoneNumber
                    value:
                      exp: Slot.PhoneNumber
          - clearSlot:
              name: Clear Slot
              slots:
                - slot:
                    name: PhoneNumber
          - callTask:
              name: Call Task
              targetTaskRef: "/digitalBot/tasks/task[ACCAPI1-Check Existing Customer Or Not_164]"
              outputs:
                default:
                  actions:
                    - communicate:
                        name: Communicate
                        communication:
                          exp: "MakeCommunication(\n  ToCommunication(MakeCommunication(\"I found you!🥳\\nHello \", Flow.FirstName, \" 🤝\")))"
                    - callTask:
                        name: Call Task
                        targetTaskRef: "/digitalBot/tasks/task[ACCAPI5-Validate Master PIN_720]"
                        outputs:
                          default:
                            actions:
                              - communicate:
                                  name: Communicate
                                  communication:
                                    exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"How can I assist you with your Banking and Insurance needs today?🤖\")))"
                          paths:
                            - path:
                                name: Invalid PIN
                                actions:
                                  - communicate:
                                      name: Communicate
                                      communication:
                                        exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"🚫Your verification was unsuccessful. Please review your information and try again later.\")))"
                                  - communicate:
                                      name: Communicate
                                      communication:
                                        exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're disconnecting the current interaction now.Have a great day!👋 \")))"
                                  - disconnect:
                                      name: Disconnect
                paths:
                  - path:
                      name: Not an Existing Customer
                      actions:
                        - communicate:
                            name: Communicate
                            communication:
                              exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"Seems like entered phone number is not registered with us. Currently registrations are closed. Please use +918074794107 for testing purpose.\\nMaster PIN is 1234\")))"
                        - communicate:
                            name: Communicate
                            communication:
                              exp: "MakeCommunication(\n  ToCommunication(ToCommunication(\"We're disconnecting the current interaction now.Have a great day!👋 \")))"
                        - disconnect:
                            name: Disconnect
          - jumpToTask:
              name: Jump to Reusable Task
              targetTaskRef: "/digitalBot/tasks/task[Main Menu_63]"
  settingsNaturalLanguageUnderstanding:
    nluDomainVersion:
      intents: []
      entities:
        - name: A
          type: AccountPINType
        - name: AccountPIN_API9
          type: AccountPINType
        - name: B
          type: AccountPINType
        - name: BankAccountName
          type: NameType
        - name: BankAccountNumber_API9
          type: BankAccountNumberType
        - name: BankAccType
          type: BankAccountType
        - name: CaseNumber
          type: CaseNumberType
        - name: Date
          type: "builtin:date"
        - name: DestinationBankAccountNumber
          type: BankAccountNumberType
        - name: FirstName
          type: NameType
        - name: FourDigitsPIN
          type: AccountPINType
        - name: Gmail
          type: GmailType
        - name: InsurnacePolicyType
          type: InsurancePolicyType
        - name: LastName
          type: NameType
        - name: Name
          type: NameType
        - name: Paragraph
          type: ParagraphType
        - name: PhoneNumber
          type: PhoneNumberType
        - name: PolicyNumber
          type: PolicyNumberType
        - name: Priority
          type: Priority Type
        - name: SixDigitsOTP
          type: 6DigitsOTPType
        - name: SourceBankAccountNumber
          type: BankAccountNumberType
        - name: TimeFormatHHMM
          type: Time HH MM
        - name: TransactionAmount
          type: AmountType
        - name: TransactionReason
          type: ParagraphType
        - name: VoucherCode
          type: ParagraphType
      entityTypes:
        - name: 6DigitsOTPType
          description: The description of the Entity Type "6DigitsOTPType"
          mechanism:
            type: Regex
            restricted: true
            items:
              - value: "^\\b[0-9]{6}\\b$"
                synonyms: []
        - name: AccountPINType
          description: The description of the Entity Type "AccountPINType"
          mechanism:
            type: Regex
            restricted: true
            items:
              - value: "^\\b[0-9]{4}\\b$"
                synonyms: []
        - name: AmountType
          description: The description of the Entity Type "AmountType"
          mechanism:
            type: Regex
            restricted: true
            items:
              - value: "^\\d{1,10}$"
                synonyms: []
        - name: BankAccountNumberType
          description: The description of the Entity Type "BankAccountNumberType"
          mechanism:
            type: Regex
            restricted: true
            items:
              - value: "^CUST-\\d{4}$"
                synonyms: []
        - name: BankAccountType
          description: The description of the Entity Type "BankAccountType"
          mechanism:
            type: List
            restricted: true
            items:
              - value: Checking
                synonyms: []
              - value: Saving
                synonyms: []
              - value: Business
                synonyms: []
              - value: Student
                synonyms: []
              - value: Retirement
                synonyms: []
        - name: CaseNumberType
          description: The description of the Entity Type "CaseNumberType"
          mechanism:
            type: Regex
            restricted: true
            items:
              - value: "^\\b[0-9]{8}\\b$"
                synonyms: []
        - name: GmailType
          description: The description of the Entity Type "GmailType"
          mechanism:
            type: Regex
            restricted: true
            items:
              - value: "\\b[A-Za-z0-9.-]+@(?:gmail\\.com)\\b"
                synonyms: []
        - name: InsurancePolicyType
          description: The description of the Entity Type "InsurancePolicyType"
          mechanism:
            type: List
            restricted: true
            items:
              - value: Life
                synonyms: []
              - value: Auto
                synonyms: []
              - value: Home
                synonyms: []
              - value: Health
                synonyms: []
        - name: NameType
          description: The description of the Entity Type "NameType"
          mechanism:
            type: Regex
            restricted: true
            items:
              - value: "^(?!\\s*$)[a-zA-Z\\s]{1,50}$"
                synonyms: []
        - name: ParagraphType
          description: The description of the Entity Type "ParagraphType"
          mechanism:
            type: Regex
            restricted: true
            items:
              - value: "^.{0,300}$"
                synonyms: []
        - name: PhoneNumberType
          description: The description of the Entity Type "PhoneNumberType"
          mechanism:
            type: Regex
            restricted: true
            items:
              - value: "^\\+[1-9]{2}[0-9]{10}$"
                synonyms: []
        - name: PolicyNumberType
          description: The description of the Entity Type "PolicyNumberType"
          mechanism:
            type: Regex
            restricted: true
            items:
              - value: "^POLICY-\\d{4}$"
                synonyms: []
        - name: Priority Type
          description: The description of the Entity Type "Priority Type"
          mechanism:
            type: List
            restricted: true
            items:
              - value: Low
                synonyms: []
              - value: Medium
                synonyms: []
              - value: High
                synonyms: []
        - name: Time HH MM
          description: The description of the Entity Type "Time HH MM"
          mechanism:
            type: Regex
            restricted: true
            items:
              - value: "^(?:[01]\\d|2[0-3]):[0-5]\\d$"
                synonyms: []
      language: en-us
    mutedUtterances: []
